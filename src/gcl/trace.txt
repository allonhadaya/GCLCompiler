
First & follow symbols:
----------------------

gcl
first:   "module" 
follow:  EOF 

module
first:   "module" 
follow:  EOF "module" 

validIdentifier
first:   identifier 
follow:  identifier "private" "." ";" "constant" "=" "," "]" "typedefinition" 
         "integer" "Boolean" "tuple" 

definitionPart
first:   identifier "constant" "typedefinition" "integer" "Boolean" "tuple" 
follow:  "private" "." "begin" 

block
first:   identifier "begin" "constant" "typedefinition" "integer" "Boolean" 
         "tuple" 
follow:  "." 

statementPart
first:   identifier "skip" "read" "write" "do" "if" 
follow:  "end" "od" "fi" "[]" 

definition
first:   identifier "constant" "typedefinition" "integer" "Boolean" "tuple" 
follow:  ";" 

statement
first:   identifier "skip" "read" "write" "do" "if" 
follow:  ";" 

variableDefinition
first:   identifier "integer" "Boolean" "tuple" 
follow:  ";" 

constantDefinition
first:   "constant" 
follow:  ";" 

typeDefinition
first:   "typedefinition" 
follow:  ";" 

expression
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," ".." "]" "->" ")" 

type
first:   identifier "integer" "Boolean" "tuple" 
follow:  identifier 

rangeType
first:   "range" 
follow:  identifier 

typeSymbol
first:   identifier "integer" "Boolean" 
follow:  identifier "range" 

tupleType
first:   "tuple" 
follow:  identifier 

qualifiedIdentifier
first:   identifier 
follow:  identifier ";" "=" "," "range" ".." "]" ":=" "->" "|" "&" "+" "-" ")" 
         "#" ">" ">=" "<" "<=" "*" "/" "\\" 

emptyStatement
first:   "skip" 
follow:  ";" 

readStatement
first:   "read" 
follow:  ";" 

writeStatement
first:   "write" 
follow:  ";" 

assignStatement
first:   identifier 
follow:  ";" 

ifStatement
first:   "if" 
follow:  ";" 

doStatement
first:   "do" 
follow:  ";" 

variableAccessEtc
first:   identifier 
follow:  ";" "=" "," ".." "]" ":=" "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" 
         "<=" "*" "/" "\\" 

writeItem
first:   identifier numeral gclString "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," 

guardedCommandList
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  "od" "fi" 

guardedCommand
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  "od" "fi" "[]" 

andExpression
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," ".." "]" "->" "|" ")" 

relationalExpr
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," ".." "]" "->" "|" "&" ")" 

simpleExpr
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "=" "," ".." "]" "->" "|" "&" ")" "#" ">" ">=" "<" "<=" 

relationalOperator
first:   "=" "#" ">" ">=" "<" "<=" 
follow:  identifier numeral "[" "+" "-" "~" "(" "true" "false" 

term
first:   identifier numeral "[" "(" "true" "false" 
follow:  ";" "=" "," ".." "]" "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" "<=" 

addOperator
first:   "+" "-" 
follow:  identifier numeral "[" "(" "true" "false" 

factor
first:   identifier numeral "[" "(" "true" "false" 
follow:  ";" "=" "," ".." "]" "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" "<=" 
         "*" "/" "\\" 

multiplyOperator
first:   "*" "/" "\\" 
follow:  identifier numeral "[" "(" "true" "false" 

booleanConstant
first:   "true" "false" 
follow:  ";" "=" "," ".." "]" "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" "<=" 
         "*" "/" "\\" 


Cross reference list:
--------------------

  "#"           246
  "&"           193
  "("           232
  ")"           232
  "*"           260
  "+"           206  255
  ","            95  128  144  148  160  163  238
  "-"           207  256
  "->"          182
  "."            62  271
  ".."          104
  "/"           261
  ":="          161
  ";"            68   72   72
  "<"           249
  "<="          250
  "="            85  245
  ">"           247
  ">="          248
  "Boolean"     120
  "["           104  126  236
  "[]"          178
  "\\"          262
  "]"           104  131  241
  "begin"        66
  "constant"     83
  "do"          168
  "end"          66
  "false"       292
  "fi"          174
  "if"          173
  "integer"     119
  "module"       58
  "od"          169
  "private"      60
  "range"       104
  "read"        143
  "skip"        139
  "true"        292
  "tuple"       126
  "typedefinit  110
  "write"       148
  "|"           188
  "~"           209
  addOperator  -253  212
  andExpressio -190  188  188
  assignStatem -156  137
  block         -64   61
  booleanConst -290  229
  constantDefi  -80   77
  definition    -74   68
  definitionPa  -68   59   66
  doStatement  -166  137
  emptyStateme -139  136
  expression   -185   85  104  104  153  162  163  182  232  236  238
  factor       -223  219  219
  gcl           -48
  gclString     154
  guardedComma -180  178  178
  guardedComma -176  168  173
  identifier    128  266  271  280
  ifStatement  -171  137
  module        -55   51   52
  multiplyOper -258  219
  numeral       226
  qualifiedIde -264  121  288
  rangeType    -101  115
  readStatemen -141  136
  relationalEx -195  193  193
  relationalOp -243  199
  simpleExpr   -203  198  199
  statement    -134   72   72
  statementPar  -70   66  183
  term         -216  206  207  209  212
  tupleType    -123  115
  type         -113   91  110
  typeDefiniti -107   78
  typeSymbol   -117  115  126  128
  validIdentif -278   58   83   91   95  110  126
  variableAcce -285  143  144  159  160  225
  variableDefi  -88   76
  writeItem    -151  148  148
  writeStateme -146  136



49 terminals
92 symbols
263 nodes
11 sets
Symbol Table:
------------

 nr name           typ  hasAt graph  del   line tokenKind
  0 EOF            t    false                 0 fixedToken
  1 identifier     t    false                22 classLitToken
  2 numeral        t    false                23 classToken
  3 gclString      t    false                24 classToken
  4 "module"       t    false                58 litToken
  5 "private"      t    false                60 litToken
  6 "."            t    false                62 fixedToken
  7 "begin"        t    false                66 litToken
  8 "end"          t    false                66 litToken
  9 ";"            t    false                68 fixedToken
 10 "constant"     t    false                83 litToken
 11 "="            t    false                85 fixedToken
 12 ","            t    false                95 fixedToken
 13 "range"        t    false               104 litToken
 14 "["            t    false               104 fixedToken
 15 ".."           t    false               104 fixedToken
 16 "]"            t    false               104 fixedToken
 17 "typedefinit   t    false               110 litToken
 18 "integer"      t    false               119 litToken
 19 "Boolean"      t    false               120 litToken
 20 "tuple"        t    false               126 litToken
 21 "skip"         t    false               139 litToken
 22 "read"         t    false               143 litToken
 23 "write"        t    false               148 litToken
 24 ":="           t    false               161 fixedToken
 25 "do"           t    false               168 litToken
 26 "od"           t    false               169 litToken
 27 "if"           t    false               173 litToken
 28 "fi"           t    false               174 litToken
 29 "[]"           t    false               178 fixedToken
 30 "->"           t    false               182 fixedToken
 31 "|"            t    false               188 fixedToken
 32 "&"            t    false               193 fixedToken
 33 "+"            t    false               206 fixedToken
 34 "-"            t    false               207 fixedToken
 35 "~"            t    false               209 fixedToken
 36 "("            t    false               232 fixedToken
 37 ")"            t    false               232 fixedToken
 38 "#"            t    false               246 fixedToken
 39 ">"            t    false               247 fixedToken
 40 ">="           t    false               248 fixedToken
 41 "<"            t    false               249 fixedToken
 42 "<="           t    false               250 fixedToken
 43 "*"            t    false               260 fixedToken
 44 "/"            t    false               261 fixedToken
 45 "\\"           t    false               262 fixedToken
 46 "true"         t    false               292 litToken
 47 "false"        t    false               292 litToken
 48 ???            t    false                 0 fixedToken
 49 option1        pr   false                28 fixedToken
 50 option3        pr   false                30 fixedToken
 51 option5        pr   false                32 fixedToken
 52 option6        pr   false                33 fixedToken
 53 option7        pr   false                34 fixedToken
 54 option9        pr   false                36 fixedToken
 55 option10       pr   false                37 fixedToken
  0 gcl            nt   false     1 false    48 fixedToken
  1 module         nt   true      9 false    55 fixedToken
  2 validIdentif   nt   false   255 false   278 fixedToken
  3 definitionPa   nt   true     26 true     68 fixedToken
  4 block          nt   true     18 false    64 fixedToken
  5 statementPar   nt   true     27 false    70 fixedToken
  6 definition     nt   true     36 false    74 fixedToken
  7 statement      nt   true     95 false   134 fixedToken
  8 variableDefi   nt   true     46 false    88 fixedToken
  9 constantDefi   nt   true     40 false    80 fixedToken
 10 typeDefiniti   nt   true     61 false   107 fixedToken
 11 expression     nt   true    157 false   185 fixedToken
 12 type           nt   true     69 false   113 fixedToken
 13 rangeType      nt   true     53 false   101 fixedToken
 14 typeSymbol     nt   true     75 false   117 fixedToken
 15 tupleType      nt   true     80 false   123 fixedToken
 16 qualifiedIde   nt   true    249 false   264 fixedToken
 17 emptyStateme   nt   false   105 false   139 fixedToken
 18 readStatemen   nt   true    106 false   141 fixedToken
 19 writeStateme   nt   true    113 false   146 fixedToken
 20 assignStatem   nt   true    125 false   156 fixedToken
 21 ifStatement    nt   true    143 false   171 fixedToken
 22 doStatement    nt   true    139 false   166 fixedToken
 23 variableAcce   nt   true    257 false   285 fixedToken
 24 writeItem      nt   true    123 false   151 fixedToken
 25 guardedComma   nt   true    148 false   176 fixedToken
 26 guardedComma   nt   true    152 false   180 fixedToken
 27 andExpressio   nt   true    162 false   190 fixedToken
 28 relationalEx   nt   true    167 false   195 fixedToken
 29 simpleExpr     nt   true    178 false   203 fixedToken
 30 relationalOp   nt   false   220 false   243 fixedToken
 31 term           nt   true    188 false   216 fixedToken
 32 addOperator    nt   false   238 false   253 fixedToken
 33 factor         nt   true    196 false   223 fixedToken
 34 multiplyOper   nt   false   244 false   258 fixedToken
 35 booleanConst   nt   false   261 false   290 fixedToken

Literal Tokens:
--------------


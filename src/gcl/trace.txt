
First & follow symbols:
----------------------

gcl
first:   "module" 
follow:  EOF 

module
first:   "module" 
follow:  EOF "module" 

validIdentifier
first:   identifier 
follow:  identifier "private" "." ";" "constant" "=" "," "]" "typedefinition" 
         "integer" "Boolean" "tuple" 

definitionPart
first:   identifier "constant" "typedefinition" "integer" "Boolean" "tuple" 
follow:  "private" "." "begin" 

block
first:   identifier "begin" "constant" "typedefinition" "integer" "Boolean" 
         "tuple" 
follow:  "." 

statementPart
first:   identifier "skip" "read" "write" "do" "forall" "if" 
follow:  "end" "od" "llarof" "fi" "[]" 

definition
first:   identifier "constant" "typedefinition" "integer" "Boolean" "tuple" 
follow:  ";" 

statement
first:   identifier "skip" "read" "write" "do" "forall" "if" 
follow:  ";" 

variableDefinition
first:   identifier "integer" "Boolean" "tuple" 
follow:  ";" 

constantDefinition
first:   "constant" 
follow:  ";" 

typeDefinition
first:   "typedefinition" 
follow:  ";" 

expression
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," ".." "]" "->" ")" 

type
first:   identifier "integer" "Boolean" "tuple" 
follow:  identifier 

rangeType
first:   "range" 
follow:  identifier 

typeSymbol
first:   identifier "integer" "Boolean" 
follow:  identifier "range" 

tupleType
first:   "tuple" 
follow:  identifier 

qualifiedIdentifier
first:   identifier 
follow:  identifier ";" "=" "," "range" ".." "]" ":=" "->" "|" "&" "+" "-" ")" 
         "#" ">" ">=" "<" "<=" "*" "/" "\\" 

emptyStatement
first:   "skip" 
follow:  ";" 

readStatement
first:   "read" 
follow:  ";" 

writeStatement
first:   "write" 
follow:  ";" 

assignStatement
first:   identifier 
follow:  ";" 

ifStatement
first:   "if" 
follow:  ";" 

doStatement
first:   "do" 
follow:  ";" 

forStatement
first:   "forall" 
follow:  ";" 

variableAccessEtc
first:   identifier 
follow:  ";" "=" "," ".." "]" ":=" "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" 
         "<=" "*" "/" "\\" 

writeItem
first:   identifier numeral gclString "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," 

guardedCommandList
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  "od" "fi" 

guardedCommand
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  "od" "fi" "[]" 

andExpression
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," ".." "]" "->" "|" ")" 

relationalExpr
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," ".." "]" "->" "|" "&" ")" 

simpleExpr
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "=" "," ".." "]" "->" "|" "&" ")" "#" ">" ">=" "<" "<=" 

relationalOperator
first:   "=" "#" ">" ">=" "<" "<=" 
follow:  identifier numeral "[" "+" "-" "~" "(" "true" "false" 

term
first:   identifier numeral "[" "(" "true" "false" 
follow:  ";" "=" "," ".." "]" "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" "<=" 

addOperator
first:   "+" "-" 
follow:  identifier numeral "[" "(" "true" "false" 

factor
first:   identifier numeral "[" "(" "true" "false" 
follow:  ";" "=" "," ".." "]" "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" "<=" 
         "*" "/" "\\" 

multiplyOperator
first:   "*" "/" "\\" 
follow:  identifier numeral "[" "(" "true" "false" 

booleanConstant
first:   "true" "false" 
follow:  ";" "=" "," ".." "]" "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" "<=" 
         "*" "/" "\\" 


Cross reference list:
--------------------

  "#"           253
  "&"           200
  "("           239
  ")"           239
  "*"           267
  "+"           213  262
  ","            95  128  145  149  161  164  245
  "-"           214  263
  "->"          174  189
  "."            62  278
  ".."          104
  "/"           268
  ":="          162
  ";"            68   72   72
  "<"           256
  "<="          257
  "="            85  252
  ">"           254
  ">="          255
  "Boolean"     120
  "["           104  126  243
  "[]"          185
  "\\"          269
  "]"           104  131  248
  "begin"        66
  "constant"     83
  "do"          169
  "end"          66
  "false"       299
  "fi"          181
  "forall"      174
  "if"          180
  "integer"     119
  "llarof"      176
  "module"       58
  "od"          170
  "private"      60
  "range"       104
  "read"        144
  "skip"        140
  "true"        299
  "tuple"       126
  "typedefinit  110
  "write"       149
  "|"           195
  "~"           216
  addOperator  -260  219
  andExpressio -197  195  195
  assignStatem -157  137
  block         -64   61
  booleanConst -297  236
  constantDefi  -80   77
  definition    -74   68
  definitionPa  -68   59   66
  doStatement  -167  137
  emptyStateme -140  136
  expression   -192   85  104  104  154  163  164  189  239  243  245
  factor       -230  226  226
  forStatement -172  138
  gcl           -48
  gclString     155
  guardedComma -187  185  185
  guardedComma -183  169  180
  identifier    128  273  278  287
  ifStatement  -178  137
  module        -55   51   52
  multiplyOper -265  226
  numeral       233
  qualifiedIde -271  121  295
  rangeType    -101  115
  readStatemen -142  136
  relationalEx -202  200  200
  relationalOp -250  206
  simpleExpr   -210  205  206
  statement    -134   72   72
  statementPar  -70   66  175  190
  term         -223  213  214  216  219
  tupleType    -123  115
  type         -113   91  110
  typeDefiniti -107   78
  typeSymbol   -117  115  126  128
  validIdentif -285   58   83   91   95  110  126
  variableAcce -292  144  145  160  161  174  232
  variableDefi  -88   76
  writeItem    -152  149  149
  writeStateme -147  136



51 terminals
95 symbols
272 nodes
11 sets
Symbol Table:
------------

 nr name           typ  hasAt graph  del   line tokenKind
  0 EOF            t    false                 0 fixedToken
  1 identifier     t    false                22 classLitToken
  2 numeral        t    false                23 classToken
  3 gclString      t    false                24 classToken
  4 "module"       t    false                58 litToken
  5 "private"      t    false                60 litToken
  6 "."            t    false                62 fixedToken
  7 "begin"        t    false                66 litToken
  8 "end"          t    false                66 litToken
  9 ";"            t    false                68 fixedToken
 10 "constant"     t    false                83 litToken
 11 "="            t    false                85 fixedToken
 12 ","            t    false                95 fixedToken
 13 "range"        t    false               104 litToken
 14 "["            t    false               104 fixedToken
 15 ".."           t    false               104 fixedToken
 16 "]"            t    false               104 fixedToken
 17 "typedefinit   t    false               110 litToken
 18 "integer"      t    false               119 litToken
 19 "Boolean"      t    false               120 litToken
 20 "tuple"        t    false               126 litToken
 21 "skip"         t    false               140 litToken
 22 "read"         t    false               144 litToken
 23 "write"        t    false               149 litToken
 24 ":="           t    false               162 fixedToken
 25 "do"           t    false               169 litToken
 26 "od"           t    false               170 litToken
 27 "forall"       t    false               174 litToken
 28 "->"           t    false               174 fixedToken
 29 "llarof"       t    false               176 litToken
 30 "if"           t    false               180 litToken
 31 "fi"           t    false               181 litToken
 32 "[]"           t    false               185 fixedToken
 33 "|"            t    false               195 fixedToken
 34 "&"            t    false               200 fixedToken
 35 "+"            t    false               213 fixedToken
 36 "-"            t    false               214 fixedToken
 37 "~"            t    false               216 fixedToken
 38 "("            t    false               239 fixedToken
 39 ")"            t    false               239 fixedToken
 40 "#"            t    false               253 fixedToken
 41 ">"            t    false               254 fixedToken
 42 ">="           t    false               255 fixedToken
 43 "<"            t    false               256 fixedToken
 44 "<="           t    false               257 fixedToken
 45 "*"            t    false               267 fixedToken
 46 "/"            t    false               268 fixedToken
 47 "\\"           t    false               269 fixedToken
 48 "true"         t    false               299 litToken
 49 "false"        t    false               299 litToken
 50 ???            t    false                 0 fixedToken
 51 option1        pr   false                28 fixedToken
 52 option3        pr   false                30 fixedToken
 53 option5        pr   false                32 fixedToken
 54 option6        pr   false                33 fixedToken
 55 option7        pr   false                34 fixedToken
 56 option9        pr   false                36 fixedToken
 57 option10       pr   false                37 fixedToken
  0 gcl            nt   false     1 false    48 fixedToken
  1 module         nt   true      9 false    55 fixedToken
  2 validIdentif   nt   false   264 false   285 fixedToken
  3 definitionPa   nt   true     26 true     68 fixedToken
  4 block          nt   true     18 false    64 fixedToken
  5 statementPar   nt   true     27 false    70 fixedToken
  6 definition     nt   true     36 false    74 fixedToken
  7 statement      nt   true     95 false   134 fixedToken
  8 variableDefi   nt   true     46 false    88 fixedToken
  9 constantDefi   nt   true     40 false    80 fixedToken
 10 typeDefiniti   nt   true     61 false   107 fixedToken
 11 expression     nt   true    166 false   192 fixedToken
 12 type           nt   true     69 false   113 fixedToken
 13 rangeType      nt   true     53 false   101 fixedToken
 14 typeSymbol     nt   true     75 false   117 fixedToken
 15 tupleType      nt   true     80 false   123 fixedToken
 16 qualifiedIde   nt   true    258 false   271 fixedToken
 17 emptyStateme   nt   false   107 false   140 fixedToken
 18 readStatemen   nt   true    108 false   142 fixedToken
 19 writeStateme   nt   true    115 false   147 fixedToken
 20 assignStatem   nt   true    127 false   157 fixedToken
 21 ifStatement    nt   true    152 false   178 fixedToken
 22 doStatement    nt   true    141 false   167 fixedToken
 23 forStatement   nt   true    145 false   172 fixedToken
 24 variableAcce   nt   true    266 false   292 fixedToken
 25 writeItem      nt   true    125 false   152 fixedToken
 26 guardedComma   nt   true    157 false   183 fixedToken
 27 guardedComma   nt   true    161 false   187 fixedToken
 28 andExpressio   nt   true    171 false   197 fixedToken
 29 relationalEx   nt   true    176 false   202 fixedToken
 30 simpleExpr     nt   true    187 false   210 fixedToken
 31 relationalOp   nt   false   229 false   250 fixedToken
 32 term           nt   true    197 false   223 fixedToken
 33 addOperator    nt   false   247 false   260 fixedToken
 34 factor         nt   true    205 false   230 fixedToken
 35 multiplyOper   nt   false   253 false   265 fixedToken
 36 booleanConst   nt   false   270 false   297 fixedToken

Literal Tokens:
--------------


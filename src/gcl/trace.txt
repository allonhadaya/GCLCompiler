
First & follow symbols:
----------------------

gcl
first:   "module" 
follow:  EOF 

module
first:   "module" 
follow:  EOF "module" 

validIdentifier
first:   identifier 
follow:  identifier "private" "." ";" "constant" "=" "," "typedefinition" 
         "procedure" "]" "integer" "Boolean" "tuple" "(" ")" 

definitionPart
first:   identifier "constant" "typedefinition" "procedure" "integer" 
         "Boolean" "tuple" 
follow:  "private" "." "begin" 

block
first:   identifier "begin" "constant" "typedefinition" "procedure" "integer" 
         "Boolean" "tuple" 
follow:  "." ";" 

statementPart
first:   identifier "skip" "read" "write" "return" "do" "forall" "if" 
follow:  "end" "od" "llarof" "fi" "[]" 

definition
first:   identifier "constant" "typedefinition" "procedure" "integer" 
         "Boolean" "tuple" 
follow:  ";" 

statement
first:   identifier "skip" "read" "write" "return" "do" "forall" "if" 
follow:  ";" 

variableDefinition
first:   identifier "integer" "Boolean" "tuple" 
follow:  ";" ")" 

constantDefinition
first:   "constant" 
follow:  ";" 

typeDefinition
first:   "typedefinition" 
follow:  ";" 

procedureDefinition
first:   "procedure" 
follow:  ";" 

expression
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," "]" ".." ")" "->" 

type
first:   identifier "integer" "Boolean" "tuple" 
follow:  identifier 

arrayType
first:   "array" 
follow:  identifier 

qualifiedIdentifier
first:   identifier 
follow:  identifier ";" "=" "," "@" "array" "[" "]" "range" ".." ")" ":=" "!" 
         "->" "|" "&" "+" "-" "#" ">" ">=" "<" "<=" "*" "/" "\\" 

rangeType
first:   "range" 
follow:  identifier 

typeSymbol
first:   identifier "integer" "Boolean" 
follow:  identifier "array" "range" 

tupleType
first:   "tuple" 
follow:  identifier 

justProcedures
first:   "procedure" 
follow:  "]" 

fieldsAndProcedures
first:   identifier "integer" "Boolean" 
follow:  "]" 

procedureDeclaration
first:   "procedure" 
follow:  "," "]" 

moreFieldsAndProcedures
first:   "," "procedure" 
follow:  "]" 

parameterPart
first:   "(" 
follow:  "," "]" 

parameterDefinition
first:   "value" "reference" 
follow:  ";" ")" 

emptyStatement
first:   "skip" 
follow:  ";" 

readStatement
first:   "read" 
follow:  ";" 

writeStatement
first:   "write" 
follow:  ";" 

variableAccessStatement
first:   identifier 
follow:  ";" 

returnStatement
first:   "return" 
follow:  ";" 

ifStatement
first:   "if" 
follow:  ";" 

doStatement
first:   "do" 
follow:  ";" 

forStatement
first:   "forall" 
follow:  ";" 

variableAccessEtc
first:   identifier 
follow:  ";" "=" "," "]" ".." ")" ":=" "!" "->" "|" "&" "+" "-" "#" ">" ">=" 
         "<" "<=" "*" "/" "\\" 

writeItem
first:   identifier numeral gclString "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," 

expressionList
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  "]" ")" 

assignStatement
first:   "," ":=" 
follow:  ";" 

callStatement
first:   "!" 
follow:  ";" 

argumentList
first:   "(" 
follow:  ";" 

guardedCommandList
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  "od" "fi" 

guardedCommand
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  "od" "fi" "[]" 

andExpression
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," "]" ".." ")" "->" "|" 

relationalExpr
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," "]" ".." ")" "->" "|" "&" 

simpleExpr
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "=" "," "]" ".." ")" "->" "|" "&" "#" ">" ">=" "<" "<=" 

relationalOperator
first:   "=" "#" ">" ">=" "<" "<=" 
follow:  identifier numeral "[" "(" "+" "-" "~" "true" "false" 

term
first:   identifier numeral "[" "(" "true" "false" 
follow:  ";" "=" "," "]" ".." ")" "->" "|" "&" "+" "-" "#" ">" ">=" "<" "<=" 

addOperator
first:   "+" "-" 
follow:  identifier numeral "[" "(" "true" "false" 

factor
first:   identifier numeral "[" "(" "true" "false" 
follow:  ";" "=" "," "]" ".." ")" "->" "|" "&" "+" "-" "#" ">" ">=" "<" "<=" 
         "*" "/" "\\" 

multiplyOperator
first:   "*" "/" "\\" 
follow:  identifier numeral "[" "(" "true" "false" 

booleanConstant
first:   "true" "false" 
follow:  ";" "=" "," "]" ".." ")" "->" "|" "&" "+" "-" "#" ">" ">=" "<" "<=" 
         "*" "/" "\\" 

subsAndCompons
first:   "@" "[" 
follow:  ";" "=" "," "]" ".." ")" ":=" "!" "->" "|" "&" "+" "-" "#" ">" ">=" 
         "<" "<=" "*" "/" "\\" 


Cross reference list:
--------------------

  "!"           328
  "#"           450
  "&"           389
  "("           237  340  442
  ")"           245  340  442
  "*"           463
  "+"           413  458
  ","           108  185  207  272  279  296  311  316
  "-"           414  459
  "->"          354  372
  "."            62  476
  ".."          155
  "/"           464
  ":="          313
  ";"            70   74   74  241
  "<"           453
  "<="          454
  "="            92  449
  ">"           451
  ">="          452
  "@"           132  507
  "Boolean"     166
  "["           148  149  155  172  444  505
  "[]"          367
  "\\"          465
  "]"           148  149  155  177  444  505
  "array"       148
  "begin"        66
  "constant"     90
  "do"          349
  "end"          66
  "false"       517
  "fi"          361
  "forall"      354
  "if"          360
  "integer"     165
  "llarof"      356
  "module"       58
  "od"          350
  "private"      60
  "procedure"   126  224
  "range"       155
  "read"        270
  "reference"   250
  "return"      344
  "skip"        265
  "true"        517
  "tuple"       172
  "typedefinit  121
  "value"       249
  "write"       277
  "|"           380
  "~"           415
  addOperator  -456  418
  andExpressio -384  378  380
  argumentList -337  334
  arrayType    -142  160
  assignStatem -304  302
  block         -64   60  139
  booleanConst -515  441
  callStatemen -320  302
  constantDefi  -83   79
  definition    -76   70
  definitionPa  -68   58   66
  doStatement  -347  260
  emptyStateme -263  254
  expression   -375   92  155  155  285  294  296  314  316  372  442  505
  expressionLi -288  340  444
  factor       -437  430  433
  fieldsAndPro -190  175
  forStatement -352  261
  gcl           -48
  gclString     286
  guardedComma -370  365  367
  guardedComma -363  349  360
  identifier    127  133  328  469  476  486  507
  ifStatement  -358  259
  justProcedur -181  174  218
  module        -55   51   52
  moreFieldsAn -203  201  217
  multiplyOper -461  432
  numeral       440
  parameterDef -247  239  242
  parameterPar -235  229
  procedureDec -221  183  186
  procedureDef -124   81
  qualifiedIde -467  148  149  167  495
  rangeType    -152  160
  readStatemen -267  255
  relationalEx -393  387  389
  relationalOp -447  401
  returnStatem -342  258
  simpleExpr   -405  399  401
  statement    -252   74   74
  statementPar  -72   66  355  373
  subsAndCompo -498  496
  term         -423  413  414  415  419
  tupleType    -169  161
  type         -158  102  121
  typeDefiniti -115   80
  typeSymbol   -163  160  196  212
  validIdentif -484   58   90  102  108  121  196  212  224
  variableAcce -492  270  272  302  311  354  439
  variableAcce -299  257
  variableDefi  -95   78  249  250
  writeItem    -283  277  279
  writeStateme -275  256



58 terminals
116 symbols
372 nodes
11 sets
Symbol Table:
------------

 nr name           typ  hasAt graph  del   line tokenKind
  0 EOF            t    false                 0 fixedToken
  1 identifier     t    false                22 classLitToken
  2 numeral        t    false                23 classToken
  3 gclString      t    false                24 classToken
  4 "module"       t    false                58 litToken
  5 "private"      t    false                60 litToken
  6 "."            t    false                62 fixedToken
  7 "begin"        t    false                66 litToken
  8 "end"          t    false                66 litToken
  9 ";"            t    false                70 fixedToken
 10 "constant"     t    false                90 litToken
 11 "="            t    false                92 fixedToken
 12 ","            t    false               108 fixedToken
 13 "typedefinit   t    false               121 litToken
 14 "procedure"    t    false               126 litToken
 15 "@"            t    false               132 fixedToken
 16 "array"        t    false               148 litToken
 17 "["            t    false               148 fixedToken
 18 "]"            t    false               148 fixedToken
 19 "range"        t    false               155 litToken
 20 ".."           t    false               155 fixedToken
 21 "integer"      t    false               165 litToken
 22 "Boolean"      t    false               166 litToken
 23 "tuple"        t    false               172 litToken
 24 "("            t    false               237 fixedToken
 25 ")"            t    false               245 fixedToken
 26 "value"        t    false               249 litToken
 27 "reference"    t    false               250 litToken
 28 "skip"         t    false               265 litToken
 29 "read"         t    false               270 litToken
 30 "write"        t    false               277 litToken
 31 ":="           t    false               313 fixedToken
 32 "!"            t    false               328 fixedToken
 33 "return"       t    false               344 litToken
 34 "do"           t    false               349 litToken
 35 "od"           t    false               350 litToken
 36 "forall"       t    false               354 litToken
 37 "->"           t    false               354 fixedToken
 38 "llarof"       t    false               356 litToken
 39 "if"           t    false               360 litToken
 40 "fi"           t    false               361 litToken
 41 "[]"           t    false               367 fixedToken
 42 "|"            t    false               380 fixedToken
 43 "&"            t    false               389 fixedToken
 44 "+"            t    false               413 fixedToken
 45 "-"            t    false               414 fixedToken
 46 "~"            t    false               415 fixedToken
 47 "#"            t    false               450 fixedToken
 48 ">"            t    false               451 fixedToken
 49 ">="           t    false               452 fixedToken
 50 "<"            t    false               453 fixedToken
 51 "<="           t    false               454 fixedToken
 52 "*"            t    false               463 fixedToken
 53 "/"            t    false               464 fixedToken
 54 "\\"           t    false               465 fixedToken
 55 "true"         t    false               517 litToken
 56 "false"        t    false               517 litToken
 57 ???            t    false                 0 fixedToken
 58 option1        pr   false                28 fixedToken
 59 option3        pr   false                30 fixedToken
 60 option5        pr   false                32 fixedToken
 61 option6        pr   false                33 fixedToken
 62 option7        pr   false                34 fixedToken
 63 option9        pr   false                36 fixedToken
 64 option10       pr   false                37 fixedToken
  0 gcl            nt   false     1 false    48 fixedToken
  1 module         nt   true      9 false    55 fixedToken
  2 validIdentif   nt   false   352 false   484 fixedToken
  3 definitionPa   nt   true     28 true     68 fixedToken
  4 block          nt   true     19 false    64 fixedToken
  5 statementPar   nt   true     29 false    72 fixedToken
  6 definition     nt   true     38 false    76 fixedToken
  7 statement      nt   true    161 false   252 fixedToken
  8 variableDefi   nt   true     50 false    95 fixedToken
  9 constantDefi   nt   true     44 false    83 fixedToken
 10 typeDefiniti   nt   true     58 false   115 fixedToken
 11 procedureDef   nt   true     63 false   124 fixedToken
 12 expression     nt   true    259 false   375 fixedToken
 13 type           nt   true     98 false   158 fixedToken
 14 arrayType      nt   true     71 false   142 fixedToken
 15 qualifiedIde   nt   true    346 false   467 fixedToken
 16 rangeType      nt   true     83 false   152 fixedToken
 17 typeSymbol     nt   true    104 false   163 fixedToken
 18 tupleType      nt   true    109 false   169 fixedToken
 19 justProcedur   nt   true    119 false   181 fixedToken
 20 fieldsAndPro   nt   true    124 false   190 fixedToken
 21 procedureDec   nt   true    140 false   221 fixedToken
 22 moreFieldsAn   nt   true    129 true    203 fixedToken
 23 parameterPar   nt   true    146 false   235 fixedToken
 24 parameterDef   nt   true    157 false   247 fixedToken
 25 emptyStateme   nt   false   175 false   263 fixedToken
 26 readStatemen   nt   true    176 false   267 fixedToken
 27 writeStateme   nt   true    183 false   275 fixedToken
 28 variableAcce   nt   true    202 false   299 fixedToken
 29 returnStatem   nt   false   232 false   342 fixedToken
 30 ifStatement    nt   true    245 false   358 fixedToken
 31 doStatement    nt   true    234 false   347 fixedToken
 32 forStatement   nt   true    238 false   352 fixedToken
 33 variableAcce   nt   true    354 false   492 fixedToken
 34 writeItem      nt   true    193 false   283 fixedToken
 35 expressionLi   nt   true    195 false   288 fixedToken
 36 assignStatem   nt   true    208 false   304 fixedToken
 37 callStatemen   nt   true    221 false   320 fixedToken
 38 argumentList   nt   true    227 false   337 fixedToken
 39 guardedComma   nt   true    250 false   363 fixedToken
 40 guardedComma   nt   true    254 false   370 fixedToken
 41 andExpressio   nt   true    264 false   384 fixedToken
 42 relationalEx   nt   true    269 false   393 fixedToken
 43 simpleExpr     nt   true    280 false   405 fixedToken
 44 relationalOp   nt   false   317 false   447 fixedToken
 45 term           nt   true    290 false   423 fixedToken
 46 addOperator    nt   false   335 false   456 fixedToken
 47 factor         nt   true    298 false   437 fixedToken
 48 multiplyOper   nt   false   341 false   461 fixedToken
 49 booleanConst   nt   false   370 false   515 fixedToken
 50 subsAndCompo   nt   true    357 true    498 fixedToken

Literal Tokens:
--------------


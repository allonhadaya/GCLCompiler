
First & follow symbols:
----------------------

gcl
first:   "module" 
follow:  EOF 

module
first:   "module" 
follow:  EOF "module" 

validIdentifier
first:   identifier 
follow:  identifier "private" "." ";" "constant" "=" "," "typedefinition" 
         "procedure" "]" "integer" "Boolean" "tuple" "(" ")" 

definitionPart
first:   identifier "constant" "typedefinition" "procedure" "integer" 
         "Boolean" "tuple" 
follow:  "private" "." "begin" 

block
first:   identifier "begin" "constant" "typedefinition" "procedure" "integer" 
         "Boolean" "tuple" 
follow:  "." ";" 

statementPart
first:   identifier "skip" "read" "write" "return" "do" "forall" "if" "this" 
follow:  "end" "od" "llarof" "fi" "[]" 

definition
first:   identifier "constant" "typedefinition" "procedure" "integer" 
         "Boolean" "tuple" 
follow:  ";" 

statement
first:   identifier "skip" "read" "write" "return" "do" "forall" "if" "this" 
follow:  ";" 

variableDefinition
first:   identifier "integer" "Boolean" "tuple" 
follow:  ";" ")" 

constantDefinition
first:   "constant" 
follow:  ";" 

typeDefinition
first:   "typedefinition" 
follow:  ";" 

procedureDefinition
first:   "procedure" 
follow:  ";" 

expression
first:   identifier numeral "[" "(" "+" "-" "~" "this" "true" "false" 
follow:  ";" "," "]" ".." ")" "->" 

type
first:   identifier "integer" "Boolean" "tuple" 
follow:  identifier 

arrayType
first:   "array" 
follow:  identifier 

qualifiedIdentifier
first:   identifier 
follow:  identifier ";" "=" "," "@" "array" "[" "]" "range" ".." ")" ":=" "!" 
         "->" "|" "&" "+" "-" "#" ">" ">=" "<" "<=" "*" "/" "\\" 

rangeType
first:   "range" 
follow:  identifier 

typeSymbol
first:   identifier "integer" "Boolean" 
follow:  identifier "array" "range" 

tupleType
first:   "tuple" 
follow:  identifier 

justProcedures
first:   "procedure" 
follow:  "]" 

fieldsAndProcedures
first:   identifier "integer" "Boolean" 
follow:  "]" 

procedureDeclaration
first:   "procedure" 
follow:  "," "]" 

moreFieldsAndProcedures
first:   "," 
follow:  "]" 

parameterPart
first:   "(" 
follow:  "," "]" 

parameterDefinition
first:   "value" "reference" 
follow:  ";" ")" 

emptyStatement
first:   "skip" 
follow:  ";" 

readStatement
first:   "read" 
follow:  ";" 

writeStatement
first:   "write" 
follow:  ";" 

variableAccessStatement
first:   identifier "this" 
follow:  ";" 

returnStatement
first:   "return" 
follow:  ";" 

ifStatement
first:   "if" 
follow:  ";" 

doStatement
first:   "do" 
follow:  ";" 

forStatement
first:   "forall" 
follow:  ";" 

variableAccessEtc
first:   identifier "this" 
follow:  ";" "=" "," "]" ".." ")" ":=" "!" "->" "|" "&" "+" "-" "#" ">" ">=" 
         "<" "<=" "*" "/" "\\" 

writeItem
first:   identifier numeral gclString "[" "(" "+" "-" "~" "this" "true" 
         "false" 
follow:  ";" "," 

expressionList
first:   identifier numeral "[" "(" "+" "-" "~" "this" "true" "false" 
follow:  "]" ")" 

assignStatement
first:   "," ":=" 
follow:  ";" 

callStatement
first:   "!" 
follow:  ";" 

argumentList
first:   "(" 
follow:  ";" 

guardedCommandList
first:   identifier numeral "[" "(" "+" "-" "~" "this" "true" "false" 
follow:  "od" "fi" 

guardedCommand
first:   identifier numeral "[" "(" "+" "-" "~" "this" "true" "false" 
follow:  "od" "fi" "[]" 

andExpression
first:   identifier numeral "[" "(" "+" "-" "~" "this" "true" "false" 
follow:  ";" "," "]" ".." ")" "->" "|" 

relationalExpr
first:   identifier numeral "[" "(" "+" "-" "~" "this" "true" "false" 
follow:  ";" "," "]" ".." ")" "->" "|" "&" 

simpleExpr
first:   identifier numeral "[" "(" "+" "-" "~" "this" "true" "false" 
follow:  ";" "=" "," "]" ".." ")" "->" "|" "&" "#" ">" ">=" "<" "<=" 

relationalOperator
first:   "=" "#" ">" ">=" "<" "<=" 
follow:  identifier numeral "[" "(" "+" "-" "~" "this" "true" "false" 

term
first:   identifier numeral "[" "(" "this" "true" "false" 
follow:  ";" "=" "," "]" ".." ")" "->" "|" "&" "+" "-" "#" ">" ">=" "<" "<=" 

addOperator
first:   "+" "-" 
follow:  identifier numeral "[" "(" "this" "true" "false" 

factor
first:   identifier numeral "[" "(" "this" "true" "false" 
follow:  ";" "=" "," "]" ".." ")" "->" "|" "&" "+" "-" "#" ">" ">=" "<" "<=" 
         "*" "/" "\\" 

multiplyOperator
first:   "*" "/" "\\" 
follow:  identifier numeral "[" "(" "this" "true" "false" 

booleanConstant
first:   "true" "false" 
follow:  ";" "=" "," "]" ".." ")" "->" "|" "&" "+" "-" "#" ">" ">=" "<" "<=" 
         "*" "/" "\\" 

subsAndCompons
first:   "@" "[" 
follow:  ";" "=" "," "]" ".." ")" ":=" "!" "->" "|" "&" "+" "-" "#" ">" ">=" 
         "<" "<=" "*" "/" "\\" 


Cross reference list:
--------------------

  "!"           330
  "#"           459
  "&"           397
  "("           239  348  451
  ")"           247  348  451
  "*"           472
  "+"           422  467
  ","           109  185  207  274  281  298  313  318
  "-"           423  468
  "->"          362  380
  "."            63  485
  ".."          156
  "/"           473
  ":="          315
  ";"            71   75   75  243
  "<"           462
  "<="          463
  "="            93  458
  ">"           460
  ">="          461
  "@"           133  519
  "Boolean"     167
  "["           149  150  156  173  453  517
  "[]"          375
  "\\"          474
  "]"           149  150  156  178  453  517
  "array"       149
  "begin"        67
  "constant"     91
  "do"          357
  "end"          67
  "false"       529
  "fi"          369
  "forall"      362
  "if"          368
  "integer"     166
  "llarof"      364
  "module"       58
  "od"          358
  "private"      60
  "procedure"   127  226
  "range"       156
  "read"        272
  "reference"   252
  "return"      352
  "skip"        267
  "this"        506
  "true"        529
  "tuple"       173
  "typedefinit  122
  "value"       251
  "write"       279
  "|"           388
  "~"           424
  addOperator  -465  427
  andExpressio -392  386  388
  argumentList -345  342
  arrayType    -143  161
  assignStatem -306  304
  block         -65   60  140
  booleanConst -527  450
  callStatemen -322  304
  constantDefi  -84   80
  definition    -77   71
  definitionPa  -69   58   67
  doStatement  -355  262
  emptyStateme -265  256
  expression   -383   93  156  156  287  296  298  316  318  380  451  517
  expressionLi -290  348  453
  factor       -446  439  442
  fieldsAndPro -190  176
  forStatement -360  263
  gcl           -48
  gclString     288
  guardedComma -378  373  375
  guardedComma -371  357  368
  identifier    128  134  330  478  485  495  519
  ifStatement  -366  261
  justProcedur -181  175  219
  module        -55   51   52
  moreFieldsAn -203  201  218
  multiplyOper -470  441
  numeral       449
  parameterDef -249  241  244
  parameterPar -237  231
  procedureDec -223  183  186
  procedureDef -125   82
  qualifiedIde -476  149  150  168  505
  rangeType    -153  161
  readStatemen -269  257
  relationalEx -401  395  397
  relationalOp -456  409
  returnStatem -350  260
  simpleExpr   -414  407  410
  statement    -254   75   75
  statementPar  -73   67  363  381
  subsAndCompo -510  508
  term         -432  422  423  424  428
  tupleType    -170  162
  type         -159  103  122
  typeDefiniti -116   81
  typeSymbol   -164  161  196  213
  validIdentif -493   58   91  103  109  122  196  213  226
  variableAcce -501  272  274  304  313  362  448
  variableAcce -301  259
  variableDefi  -96   79  251  252
  writeItem    -285  279  281
  writeStateme -277  258



59 terminals
117 symbols
377 nodes
11 sets
Symbol Table:
------------

 nr name           typ  hasAt graph  del   line tokenKind
  0 EOF            t    false                 0 fixedToken
  1 identifier     t    false                22 classLitToken
  2 numeral        t    false                23 classToken
  3 gclString      t    false                24 classToken
  4 "module"       t    false                58 litToken
  5 "private"      t    false                60 litToken
  6 "."            t    false                63 fixedToken
  7 "begin"        t    false                67 litToken
  8 "end"          t    false                67 litToken
  9 ";"            t    false                71 fixedToken
 10 "constant"     t    false                91 litToken
 11 "="            t    false                93 fixedToken
 12 ","            t    false               109 fixedToken
 13 "typedefinit   t    false               122 litToken
 14 "procedure"    t    false               127 litToken
 15 "@"            t    false               133 fixedToken
 16 "array"        t    false               149 litToken
 17 "["            t    false               149 fixedToken
 18 "]"            t    false               149 fixedToken
 19 "range"        t    false               156 litToken
 20 ".."           t    false               156 fixedToken
 21 "integer"      t    false               166 litToken
 22 "Boolean"      t    false               167 litToken
 23 "tuple"        t    false               173 litToken
 24 "("            t    false               239 fixedToken
 25 ")"            t    false               247 fixedToken
 26 "value"        t    false               251 litToken
 27 "reference"    t    false               252 litToken
 28 "skip"         t    false               267 litToken
 29 "read"         t    false               272 litToken
 30 "write"        t    false               279 litToken
 31 ":="           t    false               315 fixedToken
 32 "!"            t    false               330 fixedToken
 33 "return"       t    false               352 litToken
 34 "do"           t    false               357 litToken
 35 "od"           t    false               358 litToken
 36 "forall"       t    false               362 litToken
 37 "->"           t    false               362 fixedToken
 38 "llarof"       t    false               364 litToken
 39 "if"           t    false               368 litToken
 40 "fi"           t    false               369 litToken
 41 "[]"           t    false               375 fixedToken
 42 "|"            t    false               388 fixedToken
 43 "&"            t    false               397 fixedToken
 44 "+"            t    false               422 fixedToken
 45 "-"            t    false               423 fixedToken
 46 "~"            t    false               424 fixedToken
 47 "#"            t    false               459 fixedToken
 48 ">"            t    false               460 fixedToken
 49 ">="           t    false               461 fixedToken
 50 "<"            t    false               462 fixedToken
 51 "<="           t    false               463 fixedToken
 52 "*"            t    false               472 fixedToken
 53 "/"            t    false               473 fixedToken
 54 "\\"           t    false               474 fixedToken
 55 "this"         t    false               506 litToken
 56 "true"         t    false               529 litToken
 57 "false"        t    false               529 litToken
 58 ???            t    false                 0 fixedToken
 59 option1        pr   false                28 fixedToken
 60 option3        pr   false                30 fixedToken
 61 option5        pr   false                32 fixedToken
 62 option6        pr   false                33 fixedToken
 63 option7        pr   false                34 fixedToken
 64 option9        pr   false                36 fixedToken
 65 option10       pr   false                37 fixedToken
  0 gcl            nt   false     1 false    48 fixedToken
  1 module         nt   true      9 false    55 fixedToken
  2 validIdentif   nt   false   353 false   493 fixedToken
  3 definitionPa   nt   true     30 true     69 fixedToken
  4 block          nt   true     21 false    65 fixedToken
  5 statementPar   nt   true     31 false    73 fixedToken
  6 definition     nt   true     40 false    77 fixedToken
  7 statement      nt   true    162 false   254 fixedToken
  8 variableDefi   nt   true     52 false    96 fixedToken
  9 constantDefi   nt   true     46 false    84 fixedToken
 10 typeDefiniti   nt   true     60 false   116 fixedToken
 11 procedureDef   nt   true     65 false   125 fixedToken
 12 expression     nt   true    260 false   383 fixedToken
 13 type           nt   true    100 false   159 fixedToken
 14 arrayType      nt   true     73 false   143 fixedToken
 15 qualifiedIde   nt   true    347 false   476 fixedToken
 16 rangeType      nt   true     85 false   153 fixedToken
 17 typeSymbol     nt   true    106 false   164 fixedToken
 18 tupleType      nt   true    111 false   170 fixedToken
 19 justProcedur   nt   true    120 false   181 fixedToken
 20 fieldsAndPro   nt   true    125 false   190 fixedToken
 21 procedureDec   nt   true    141 false   223 fixedToken
 22 moreFieldsAn   nt   true    130 true    203 fixedToken
 23 parameterPar   nt   true    147 false   237 fixedToken
 24 parameterDef   nt   true    158 false   249 fixedToken
 25 emptyStateme   nt   false   176 false   265 fixedToken
 26 readStatemen   nt   true    177 false   269 fixedToken
 27 writeStateme   nt   true    184 false   277 fixedToken
 28 variableAcce   nt   true    203 false   301 fixedToken
 29 returnStatem   nt   false   233 false   350 fixedToken
 30 ifStatement    nt   true    246 false   366 fixedToken
 31 doStatement    nt   true    235 false   355 fixedToken
 32 forStatement   nt   true    239 false   360 fixedToken
 33 variableAcce   nt   true    355 false   501 fixedToken
 34 writeItem      nt   true    194 false   285 fixedToken
 35 expressionLi   nt   true    196 false   290 fixedToken
 36 assignStatem   nt   true    209 false   306 fixedToken
 37 callStatemen   nt   true    222 false   322 fixedToken
 38 argumentList   nt   true    228 false   345 fixedToken
 39 guardedComma   nt   true    251 false   371 fixedToken
 40 guardedComma   nt   true    255 false   378 fixedToken
 41 andExpressio   nt   true    265 false   392 fixedToken
 42 relationalEx   nt   true    270 false   401 fixedToken
 43 simpleExpr     nt   true    281 false   414 fixedToken
 44 relationalOp   nt   false   318 false   456 fixedToken
 45 term           nt   true    291 false   432 fixedToken
 46 addOperator    nt   false   336 false   465 fixedToken
 47 factor         nt   true    299 false   446 fixedToken
 48 multiplyOper   nt   false   342 false   470 fixedToken
 49 booleanConst   nt   false   375 false   527 fixedToken
 50 subsAndCompo   nt   true    362 true    510 fixedToken

Literal Tokens:
--------------


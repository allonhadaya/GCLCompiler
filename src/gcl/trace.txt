
First & follow symbols:
----------------------

gcl
first:   "module" 
follow:  EOF 

module
first:   "module" 
follow:  EOF "module" 

validIdentifier
first:   identifier 
follow:  identifier "private" "." ";" "constant" "=" "," "typedefinition" 
         "procedure" "]" "integer" "Boolean" "tuple" "(" ")" 

definitionPart
first:   identifier "constant" "typedefinition" "procedure" "integer" 
         "Boolean" "tuple" 
follow:  "private" "." "begin" 

block
first:   identifier "begin" "constant" "typedefinition" "procedure" "integer" 
         "Boolean" "tuple" 
follow:  "." ";" 

statementPart
first:   identifier "skip" "read" "write" "do" "forall" "if" 
follow:  "end" "od" "llarof" "fi" "[]" 

definition
first:   identifier "constant" "typedefinition" "procedure" "integer" 
         "Boolean" "tuple" 
follow:  ";" 

statement
first:   identifier "skip" "read" "write" "do" "forall" "if" 
follow:  ";" 

variableDefinition
first:   identifier "integer" "Boolean" "tuple" 
follow:  ";" ")" 

constantDefinition
first:   "constant" 
follow:  ";" 

typeDefinition
first:   "typedefinition" 
follow:  ";" 

procedureDefinition
first:   "procedure" 
follow:  ";" 

expression
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," "]" ".." ")" "->" 

type
first:   identifier "integer" "Boolean" "tuple" 
follow:  identifier 

arrayType
first:   "array" 
follow:  identifier 

qualifiedIdentifier
first:   identifier 
follow:  identifier ";" "=" "," "@" "array" "[" "]" "range" ".." ")" ":=" "!" 
         "->" "|" "&" "+" "-" "#" ">" ">=" "<" "<=" "*" "/" "\\" 

rangeType
first:   "range" 
follow:  identifier 

typeSymbol
first:   identifier "integer" "Boolean" 
follow:  identifier "array" "range" 

tupleType
first:   "tuple" 
follow:  identifier 

justProcedures
first:   "procedure" 
follow:  "]" 

fieldsAndProcedures
first:   identifier "integer" "Boolean" 
follow:  "]" 

procedureDeclaration
first:   "procedure" 
follow:  "," "]" 

moreFieldsAndProcedures
first:   "," "procedure" 
follow:  "]" 

parameterPart
first:   "(" 
follow:  "," "]" 

parameterDefinition
first:   "value" "reference" 
follow:  ";" ")" 

emptyStatement
first:   "skip" 
follow:  ";" 

readStatement
first:   "read" 
follow:  ";" 

writeStatement
first:   "write" 
follow:  ";" 

variableAccessStatement
first:   identifier 
follow:  ";" 

ifStatement
first:   "if" 
follow:  ";" 

doStatement
first:   "do" 
follow:  ";" 

forStatement
first:   "forall" 
follow:  ";" 

variableAccessEtc
first:   identifier 
follow:  ";" "=" "," "]" ".." ")" ":=" "!" "->" "|" "&" "+" "-" "#" ">" ">=" 
         "<" "<=" "*" "/" "\\" 

writeItem
first:   identifier numeral gclString "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," 

expressionList
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  "]" ")" 

assignStatement
first:   "," ":=" 
follow:  ";" 

callStatement
first:   "!" 
follow:  ";" 

argumentList
first:   "(" 
follow:  ";" 

guardedCommandList
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  "od" "fi" 

guardedCommand
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  "od" "fi" "[]" 

andExpression
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," "]" ".." ")" "->" "|" 

relationalExpr
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," "]" ".." ")" "->" "|" "&" 

simpleExpr
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "=" "," "]" ".." ")" "->" "|" "&" "#" ">" ">=" "<" "<=" 

relationalOperator
first:   "=" "#" ">" ">=" "<" "<=" 
follow:  identifier numeral "[" "(" "+" "-" "~" "true" "false" 

term
first:   identifier numeral "[" "(" "true" "false" 
follow:  ";" "=" "," "]" ".." ")" "->" "|" "&" "+" "-" "#" ">" ">=" "<" "<=" 

addOperator
first:   "+" "-" 
follow:  identifier numeral "[" "(" "true" "false" 

factor
first:   identifier numeral "[" "(" "true" "false" 
follow:  ";" "=" "," "]" ".." ")" "->" "|" "&" "+" "-" "#" ">" ">=" "<" "<=" 
         "*" "/" "\\" 

multiplyOperator
first:   "*" "/" "\\" 
follow:  identifier numeral "[" "(" "true" "false" 

booleanConstant
first:   "true" "false" 
follow:  ";" "=" "," "]" ".." ")" "->" "|" "&" "+" "-" "#" ">" ">=" "<" "<=" 
         "*" "/" "\\" 

subsAndCompons
first:   "@" "[" 
follow:  ";" "=" "," "]" ".." ")" ":=" "!" "->" "|" "&" "+" "-" "#" ">" ">=" 
         "<" "<=" "*" "/" "\\" 


Cross reference list:
--------------------

  "!"           327
  "#"           444
  "&"           383
  "("           237  339  436
  ")"           245  339  436
  "*"           457
  "+"           407  452
  ","           108  185  207  271  278  295  310  315
  "-"           408  453
  "->"          348  366
  "."            62  470
  ".."          155
  "/"           458
  ":="          312
  ";"            70   74   74  241
  "<"           447
  "<="          448
  "="            92  443
  ">"           445
  ">="          446
  "@"           132  501
  "Boolean"     166
  "["           148  149  155  172  438  499
  "[]"          361
  "\\"          459
  "]"           148  149  155  177  438  499
  "array"       148
  "begin"        66
  "constant"     90
  "do"          343
  "end"          66
  "false"       511
  "fi"          355
  "forall"      348
  "if"          354
  "integer"     165
  "llarof"      350
  "module"       58
  "od"          344
  "private"      60
  "procedure"   126  224
  "range"       155
  "read"        269
  "reference"   250
  "skip"        264
  "true"        511
  "tuple"       172
  "typedefinit  121
  "value"       249
  "write"       276
  "|"           374
  "~"           409
  addOperator  -450  412
  andExpressio -378  372  374
  argumentList -336  333
  arrayType    -142  160
  assignStatem -303  301
  block         -64   60  139
  booleanConst -509  435
  callStatemen -319  301
  constantDefi  -83   79
  definition    -76   70
  definitionPa  -68   58   66
  doStatement  -341  259
  emptyStateme -262  254
  expression   -369   92  155  155  284  293  295  313  315  366  436  499
  expressionLi -287  339  438
  factor       -431  424  427
  fieldsAndPro -190  175
  forStatement -346  260
  gcl           -48
  gclString     285
  guardedComma -364  359  361
  guardedComma -357  343  354
  identifier    127  133  327  463  470  480  501
  ifStatement  -352  258
  justProcedur -181  174  218
  module        -55   51   52
  moreFieldsAn -203  201  217
  multiplyOper -455  426
  numeral       434
  parameterDef -247  239  242
  parameterPar -235  229
  procedureDec -221  183  186
  procedureDef -124   81
  qualifiedIde -461  148  149  167  489
  rangeType    -152  160
  readStatemen -266  255
  relationalEx -387  381  383
  relationalOp -441  395
  simpleExpr   -399  393  395
  statement    -252   74   74
  statementPar  -72   66  349  367
  subsAndCompo -492  490
  term         -417  407  408  409  413
  tupleType    -169  161
  type         -158  102  121
  typeDefiniti -115   80
  typeSymbol   -163  160  196  212
  validIdentif -478   58   90  102  108  121  196  212  224
  variableAcce -486  269  271  301  310  348  433
  variableAcce -298  257
  variableDefi  -95   78  249  250
  writeItem    -282  276  278
  writeStateme -274  256



57 terminals
114 symbols
364 nodes
11 sets
Symbol Table:
------------

 nr name           typ  hasAt graph  del   line tokenKind
  0 EOF            t    false                 0 fixedToken
  1 identifier     t    false                22 classLitToken
  2 numeral        t    false                23 classToken
  3 gclString      t    false                24 classToken
  4 "module"       t    false                58 litToken
  5 "private"      t    false                60 litToken
  6 "."            t    false                62 fixedToken
  7 "begin"        t    false                66 litToken
  8 "end"          t    false                66 litToken
  9 ";"            t    false                70 fixedToken
 10 "constant"     t    false                90 litToken
 11 "="            t    false                92 fixedToken
 12 ","            t    false               108 fixedToken
 13 "typedefinit   t    false               121 litToken
 14 "procedure"    t    false               126 litToken
 15 "@"            t    false               132 fixedToken
 16 "array"        t    false               148 litToken
 17 "["            t    false               148 fixedToken
 18 "]"            t    false               148 fixedToken
 19 "range"        t    false               155 litToken
 20 ".."           t    false               155 fixedToken
 21 "integer"      t    false               165 litToken
 22 "Boolean"      t    false               166 litToken
 23 "tuple"        t    false               172 litToken
 24 "("            t    false               237 fixedToken
 25 ")"            t    false               245 fixedToken
 26 "value"        t    false               249 litToken
 27 "reference"    t    false               250 litToken
 28 "skip"         t    false               264 litToken
 29 "read"         t    false               269 litToken
 30 "write"        t    false               276 litToken
 31 ":="           t    false               312 fixedToken
 32 "!"            t    false               327 fixedToken
 33 "do"           t    false               343 litToken
 34 "od"           t    false               344 litToken
 35 "forall"       t    false               348 litToken
 36 "->"           t    false               348 fixedToken
 37 "llarof"       t    false               350 litToken
 38 "if"           t    false               354 litToken
 39 "fi"           t    false               355 litToken
 40 "[]"           t    false               361 fixedToken
 41 "|"            t    false               374 fixedToken
 42 "&"            t    false               383 fixedToken
 43 "+"            t    false               407 fixedToken
 44 "-"            t    false               408 fixedToken
 45 "~"            t    false               409 fixedToken
 46 "#"            t    false               444 fixedToken
 47 ">"            t    false               445 fixedToken
 48 ">="           t    false               446 fixedToken
 49 "<"            t    false               447 fixedToken
 50 "<="           t    false               448 fixedToken
 51 "*"            t    false               457 fixedToken
 52 "/"            t    false               458 fixedToken
 53 "\\"           t    false               459 fixedToken
 54 "true"         t    false               511 litToken
 55 "false"        t    false               511 litToken
 56 ???            t    false                 0 fixedToken
 57 option1        pr   false                28 fixedToken
 58 option3        pr   false                30 fixedToken
 59 option5        pr   false                32 fixedToken
 60 option6        pr   false                33 fixedToken
 61 option7        pr   false                34 fixedToken
 62 option9        pr   false                36 fixedToken
 63 option10       pr   false                37 fixedToken
  0 gcl            nt   false     1 false    48 fixedToken
  1 module         nt   true      9 false    55 fixedToken
  2 validIdentif   nt   false   344 false   478 fixedToken
  3 definitionPa   nt   true     27 true     68 fixedToken
  4 block          nt   true     19 false    64 fixedToken
  5 statementPar   nt   true     28 false    72 fixedToken
  6 definition     nt   true     37 false    76 fixedToken
  7 statement      nt   true    157 false   252 fixedToken
  8 variableDefi   nt   true     49 false    95 fixedToken
  9 constantDefi   nt   true     43 false    83 fixedToken
 10 typeDefiniti   nt   true     56 false   115 fixedToken
 11 procedureDef   nt   true     60 false   124 fixedToken
 12 expression     nt   true    251 false   369 fixedToken
 13 type           nt   true     94 false   158 fixedToken
 14 arrayType      nt   true     68 false   142 fixedToken
 15 qualifiedIde   nt   true    338 false   461 fixedToken
 16 rangeType      nt   true     79 false   152 fixedToken
 17 typeSymbol     nt   true    100 false   163 fixedToken
 18 tupleType      nt   true    105 false   169 fixedToken
 19 justProcedur   nt   true    115 false   181 fixedToken
 20 fieldsAndPro   nt   true    120 false   190 fixedToken
 21 procedureDec   nt   true    136 false   221 fixedToken
 22 moreFieldsAn   nt   true    125 true    203 fixedToken
 23 parameterPar   nt   true    142 false   235 fixedToken
 24 parameterDef   nt   true    153 false   247 fixedToken
 25 emptyStateme   nt   false   169 false   262 fixedToken
 26 readStatemen   nt   true    170 false   266 fixedToken
 27 writeStateme   nt   true    177 false   274 fixedToken
 28 variableAcce   nt   true    196 false   298 fixedToken
 29 ifStatement    nt   true    237 false   352 fixedToken
 30 doStatement    nt   true    226 false   341 fixedToken
 31 forStatement   nt   true    230 false   346 fixedToken
 32 variableAcce   nt   true    346 false   486 fixedToken
 33 writeItem      nt   true    187 false   282 fixedToken
 34 expressionLi   nt   true    189 false   287 fixedToken
 35 assignStatem   nt   true    202 false   303 fixedToken
 36 callStatemen   nt   true    215 false   319 fixedToken
 37 argumentList   nt   true    221 false   336 fixedToken
 38 guardedComma   nt   true    242 false   357 fixedToken
 39 guardedComma   nt   true    246 false   364 fixedToken
 40 andExpressio   nt   true    256 false   378 fixedToken
 41 relationalEx   nt   true    261 false   387 fixedToken
 42 simpleExpr     nt   true    272 false   399 fixedToken
 43 relationalOp   nt   false   309 false   441 fixedToken
 44 term           nt   true    282 false   417 fixedToken
 45 addOperator    nt   false   327 false   450 fixedToken
 46 factor         nt   true    290 false   431 fixedToken
 47 multiplyOper   nt   false   333 false   455 fixedToken
 48 booleanConst   nt   false   362 false   509 fixedToken
 49 subsAndCompo   nt   true    349 true    492 fixedToken

Literal Tokens:
--------------



First & follow symbols:
----------------------

gcl
first:   "module" 
follow:  EOF 

module
first:   "module" 
follow:  EOF "module" 

validIdentifier
first:   identifier 
follow:  identifier "private" "." ";" "constant" "=" "," "typedefinition" 
         "procedure" "]" "integer" "Boolean" "tuple" 

definitionPart
first:   identifier "constant" "typedefinition" "procedure" "integer" 
         "Boolean" "tuple" 
follow:  "private" "." "begin" 

block
first:   identifier "begin" "constant" "typedefinition" "procedure" "integer" 
         "Boolean" "tuple" 
follow:  "." ";" 

statementPart
first:   identifier "skip" "read" "write" "do" "forall" "if" 
follow:  "end" "od" "llarof" "fi" "[]" 

definition
first:   identifier "constant" "typedefinition" "procedure" "integer" 
         "Boolean" "tuple" 
follow:  ";" 

statement
first:   identifier "skip" "read" "write" "do" "forall" "if" 
follow:  ";" 

variableDefinition
first:   identifier "integer" "Boolean" "tuple" 
follow:  ";" 

constantDefinition
first:   "constant" 
follow:  ";" 

typeDefinition
first:   "typedefinition" 
follow:  ";" 

procedureDefinition
first:   "procedure" 
follow:  ";" 

expression
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," "]" ".." "->" ")" 

type
first:   identifier "integer" "Boolean" "tuple" 
follow:  identifier 

arrayType
first:   "array" 
follow:  identifier 

qualifiedIdentifier
first:   identifier 
follow:  identifier ";" "=" "," "@" "array" "[" "]" "range" ".." ":=" "->" "|" 
         "&" "+" "-" ")" "#" ">" ">=" "<" "<=" "*" "/" "\\" 

rangeType
first:   "range" 
follow:  identifier 

typeSymbol
first:   identifier "integer" "Boolean" 
follow:  identifier "array" "range" 

tupleType
first:   "tuple" 
follow:  identifier 

emptyStatement
first:   "skip" 
follow:  ";" 

readStatement
first:   "read" 
follow:  ";" 

writeStatement
first:   "write" 
follow:  ";" 

assignStatement
first:   identifier 
follow:  ";" 

ifStatement
first:   "if" 
follow:  ";" 

doStatement
first:   "do" 
follow:  ";" 

forStatement
first:   "forall" 
follow:  ";" 

variableAccessEtc
first:   identifier 
follow:  ";" "=" "," "]" ".." ":=" "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" 
         "<=" "*" "/" "\\" 

writeItem
first:   identifier numeral gclString "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," 

guardedCommandList
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  "od" "fi" 

guardedCommand
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  "od" "fi" "[]" 

andExpression
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," "]" ".." "->" "|" ")" 

relationalExpr
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," "]" ".." "->" "|" "&" ")" 

simpleExpr
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "=" "," "]" ".." "->" "|" "&" ")" "#" ">" ">=" "<" "<=" 

relationalOperator
first:   "=" "#" ">" ">=" "<" "<=" 
follow:  identifier numeral "[" "+" "-" "~" "(" "true" "false" 

term
first:   identifier numeral "[" "(" "true" "false" 
follow:  ";" "=" "," "]" ".." "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" "<=" 

addOperator
first:   "+" "-" 
follow:  identifier numeral "[" "(" "true" "false" 

factor
first:   identifier numeral "[" "(" "true" "false" 
follow:  ";" "=" "," "]" ".." "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" "<=" 
         "*" "/" "\\" 

multiplyOperator
first:   "*" "/" "\\" 
follow:  identifier numeral "[" "(" "true" "false" 

booleanConstant
first:   "true" "false" 
follow:  ";" "=" "," "]" ".." "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" "<=" 
         "*" "/" "\\" 

subsAndCompons
first:   "@" "[" 
follow:  ";" "=" "," "]" ".." ":=" "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" 
         "<=" "*" "/" "\\" 


Cross reference list:
--------------------

  "#"           370
  "&"           300
  "("           353
  ")"           353
  "*"           383
  "+"           323  378
  ","           108  196  224  231  249  254  361
  "-"           324  379
  "->"          265  283
  "."            62  396
  ".."          167
  "/"           384
  ":="          251
  ";"            70   74   74
  "<"           373
  "<="          374
  "="            92  369
  ">"           371
  ">="          372
  "@"           141  427
  "Boolean"     178
  "["           160  161  167  189  358  425
  "[]"          278
  "\\"          385
  "]"           160  161  167  202  364  425
  "array"       160
  "begin"        66
  "constant"     90
  "do"          260
  "end"          66
  "false"       437
  "fi"          272
  "forall"      265
  "if"          271
  "integer"     177
  "llarof"      267
  "module"       58
  "od"          261
  "private"      60
  "procedure"   130
  "range"       167
  "read"        222
  "skip"        217
  "true"        437
  "tuple"       189
  "typedefinit  121
  "write"       229
  "|"           291
  "~"           326
  addOperator  -376  329
  andExpressio -295  289  291
  arrayType    -154  172
  assignStatem -241  210
  block         -64   60  148
  booleanConst -435  352
  constantDefi  -83   79
  definition    -76   70
  definitionPa  -68   58   66
  doStatement  -258  212
  emptyStateme -215  207
  expression   -286   92  167  167  237  252  254  283  353  358  361  425
  factor       -348  341  344
  forStatement -263  213
  gcl           -48
  gclString     239
  guardedComma -281  276  278
  guardedComma -274  260  271
  identifier    131  142  389  396  406  427
  ifStatement  -269  211
  module        -55   51   52
  multiplyOper -381  343
  numeral       351
  procedureDef -124   81
  qualifiedIde -387  160  161  179  415
  rangeType    -164  172
  readStatemen -219  208
  relationalEx -304  298  300
  relationalOp -367  312
  simpleExpr   -316  310  312
  statement    -205   74   74
  statementPar  -72   66  266  284
  subsAndCompo -418  416
  term         -334  323  324  326  330
  tupleType    -181  173
  type         -170  102  121
  typeDefiniti -115   80
  typeSymbol   -175  172  190  196
  validIdentif -404   58   90  102  108  121  190  196
  variableAcce -412  222  224  247  249  265  350
  variableDefi  -95   78
  writeItem    -235  229  231
  writeStateme -227  209



54 terminals
101 symbols
309 nodes
11 sets
Symbol Table:
------------

 nr name           typ  hasAt graph  del   line tokenKind
  0 EOF            t    false                 0 fixedToken
  1 identifier     t    false                22 classLitToken
  2 numeral        t    false                23 classToken
  3 gclString      t    false                24 classToken
  4 "module"       t    false                58 litToken
  5 "private"      t    false                60 litToken
  6 "."            t    false                62 fixedToken
  7 "begin"        t    false                66 litToken
  8 "end"          t    false                66 litToken
  9 ";"            t    false                70 fixedToken
 10 "constant"     t    false                90 litToken
 11 "="            t    false                92 fixedToken
 12 ","            t    false               108 fixedToken
 13 "typedefinit   t    false               121 litToken
 14 "procedure"    t    false               130 litToken
 15 "@"            t    false               141 fixedToken
 16 "array"        t    false               160 litToken
 17 "["            t    false               160 fixedToken
 18 "]"            t    false               160 fixedToken
 19 "range"        t    false               167 litToken
 20 ".."           t    false               167 fixedToken
 21 "integer"      t    false               177 litToken
 22 "Boolean"      t    false               178 litToken
 23 "tuple"        t    false               189 litToken
 24 "skip"         t    false               217 litToken
 25 "read"         t    false               222 litToken
 26 "write"        t    false               229 litToken
 27 ":="           t    false               251 fixedToken
 28 "do"           t    false               260 litToken
 29 "od"           t    false               261 litToken
 30 "forall"       t    false               265 litToken
 31 "->"           t    false               265 fixedToken
 32 "llarof"       t    false               267 litToken
 33 "if"           t    false               271 litToken
 34 "fi"           t    false               272 litToken
 35 "[]"           t    false               278 fixedToken
 36 "|"            t    false               291 fixedToken
 37 "&"            t    false               300 fixedToken
 38 "+"            t    false               323 fixedToken
 39 "-"            t    false               324 fixedToken
 40 "~"            t    false               326 fixedToken
 41 "("            t    false               353 fixedToken
 42 ")"            t    false               353 fixedToken
 43 "#"            t    false               370 fixedToken
 44 ">"            t    false               371 fixedToken
 45 ">="           t    false               372 fixedToken
 46 "<"            t    false               373 fixedToken
 47 "<="           t    false               374 fixedToken
 48 "*"            t    false               383 fixedToken
 49 "/"            t    false               384 fixedToken
 50 "\\"           t    false               385 fixedToken
 51 "true"         t    false               437 litToken
 52 "false"        t    false               437 litToken
 53 ???            t    false                 0 fixedToken
 54 option1        pr   false                28 fixedToken
 55 option3        pr   false                30 fixedToken
 56 option5        pr   false                32 fixedToken
 57 option6        pr   false                33 fixedToken
 58 option7        pr   false                34 fixedToken
 59 option9        pr   false                36 fixedToken
 60 option10       pr   false                37 fixedToken
  0 gcl            nt   false     1 false    48 fixedToken
  1 module         nt   true      9 false    55 fixedToken
  2 validIdentif   nt   false   289 false   404 fixedToken
  3 definitionPa   nt   true     27 true     68 fixedToken
  4 block          nt   true     19 false    64 fixedToken
  5 statementPar   nt   true     28 false    72 fixedToken
  6 definition     nt   true     37 false    76 fixedToken
  7 statement      nt   true    120 false   205 fixedToken
  8 variableDefi   nt   true     49 false    95 fixedToken
  9 constantDefi   nt   true     43 false    83 fixedToken
 10 typeDefiniti   nt   true     56 false   115 fixedToken
 11 procedureDef   nt   true     60 false   124 fixedToken
 12 expression     nt   true    191 false   286 fixedToken
 13 type           nt   true     94 false   170 fixedToken
 14 arrayType      nt   true     68 false   154 fixedToken
 15 qualifiedIde   nt   true    283 false   387 fixedToken
 16 rangeType      nt   true     79 false   164 fixedToken
 17 typeSymbol     nt   true    100 false   175 fixedToken
 18 tupleType      nt   true    105 false   181 fixedToken
 19 emptyStateme   nt   false   132 false   215 fixedToken
 20 readStatemen   nt   true    133 false   219 fixedToken
 21 writeStateme   nt   true    140 false   227 fixedToken
 22 assignStatem   nt   true    152 false   241 fixedToken
 23 ifStatement    nt   true    177 false   269 fixedToken
 24 doStatement    nt   true    166 false   258 fixedToken
 25 forStatement   nt   true    170 false   263 fixedToken
 26 variableAcce   nt   true    291 false   412 fixedToken
 27 writeItem      nt   true    150 false   235 fixedToken
 28 guardedComma   nt   true    182 false   274 fixedToken
 29 guardedComma   nt   true    186 false   281 fixedToken
 30 andExpressio   nt   true    196 false   295 fixedToken
 31 relationalEx   nt   true    201 false   304 fixedToken
 32 simpleExpr     nt   true    212 false   316 fixedToken
 33 relationalOp   nt   false   254 false   367 fixedToken
 34 term           nt   true    222 false   334 fixedToken
 35 addOperator    nt   false   272 false   376 fixedToken
 36 factor         nt   true    230 false   348 fixedToken
 37 multiplyOper   nt   false   278 false   381 fixedToken
 38 booleanConst   nt   false   307 false   435 fixedToken
 39 subsAndCompo   nt   true    294 true    418 fixedToken

Literal Tokens:
--------------


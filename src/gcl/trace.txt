
First & follow symbols:
----------------------

gcl
first:   "module" 
follow:  EOF 

module
first:   "module" 
follow:  EOF "module" 

validIdentifier
first:   identifier 
follow:  identifier "private" "." ";" "constant" "=" "," "typedefinition" 
         "procedure" "]" "integer" "Boolean" "tuple" "(" ")" 

definitionPart
first:   identifier "constant" "typedefinition" "procedure" "integer" 
         "Boolean" "tuple" 
follow:  "private" "." "begin" 

block
first:   identifier "begin" "constant" "typedefinition" "procedure" "integer" 
         "Boolean" "tuple" 
follow:  "." ";" 

statementPart
first:   identifier "skip" "read" "write" "return" "do" "forall" "if" "this" 
follow:  "end" "od" "llarof" "fi" "[]" 

definition
first:   identifier "constant" "typedefinition" "procedure" "integer" 
         "Boolean" "tuple" 
follow:  ";" 

statement
first:   identifier "skip" "read" "write" "return" "do" "forall" "if" "this" 
follow:  ";" 

variableDefinition
first:   identifier "integer" "Boolean" "tuple" 
follow:  ";" ")" 

constantDefinition
first:   "constant" 
follow:  ";" 

typeDefinition
first:   "typedefinition" 
follow:  ";" 

procedureDefinition
first:   "procedure" 
follow:  ";" 

expression
first:   identifier numeral "[" "(" "+" "-" "~" "this" "true" "false" 
follow:  ";" "," "]" ".." ")" "->" 

type
first:   identifier "integer" "Boolean" "tuple" 
follow:  identifier 

arrayType
first:   "array" 
follow:  identifier 

qualifiedIdentifier
first:   identifier 
follow:  identifier ";" "=" "," "@" "array" "[" "]" "range" ".." ")" ":=" "!" 
         "->" "|" "&" "+" "-" "#" ">" ">=" "<" "<=" "*" "/" "\\" 

rangeType
first:   "range" 
follow:  identifier 

typeSymbol
first:   identifier "integer" "Boolean" 
follow:  identifier "array" "range" 

tupleType
first:   "tuple" 
follow:  identifier 

justProcedures
first:   "procedure" 
follow:  "]" 

fieldsAndProcedures
first:   identifier "integer" "Boolean" 
follow:  "]" 

procedureDeclaration
first:   "procedure" 
follow:  "," "]" 

moreFieldsAndProcedures
first:   "," "procedure" 
follow:  "]" 

parameterPart
first:   "(" 
follow:  "," "]" 

parameterDefinition
first:   "value" "reference" 
follow:  ";" ")" 

emptyStatement
first:   "skip" 
follow:  ";" 

readStatement
first:   "read" 
follow:  ";" 

writeStatement
first:   "write" 
follow:  ";" 

variableAccessStatement
first:   identifier "this" 
follow:  ";" 

returnStatement
first:   "return" 
follow:  ";" 

ifStatement
first:   "if" 
follow:  ";" 

doStatement
first:   "do" 
follow:  ";" 

forStatement
first:   "forall" 
follow:  ";" 

variableAccessEtc
first:   identifier "this" 
follow:  ";" "=" "," "]" ".." ")" ":=" "!" "->" "|" "&" "+" "-" "#" ">" ">=" 
         "<" "<=" "*" "/" "\\" 

writeItem
first:   identifier numeral gclString "[" "(" "+" "-" "~" "this" "true" 
         "false" 
follow:  ";" "," 

expressionList
first:   identifier numeral "[" "(" "+" "-" "~" "this" "true" "false" 
follow:  "]" ")" 

assignStatement
first:   "," ":=" 
follow:  ";" 

callStatement
first:   "!" 
follow:  ";" 

argumentList
first:   "(" 
follow:  ";" 

guardedCommandList
first:   identifier numeral "[" "(" "+" "-" "~" "this" "true" "false" 
follow:  "od" "fi" 

guardedCommand
first:   identifier numeral "[" "(" "+" "-" "~" "this" "true" "false" 
follow:  "od" "fi" "[]" 

andExpression
first:   identifier numeral "[" "(" "+" "-" "~" "this" "true" "false" 
follow:  ";" "," "]" ".." ")" "->" "|" 

relationalExpr
first:   identifier numeral "[" "(" "+" "-" "~" "this" "true" "false" 
follow:  ";" "," "]" ".." ")" "->" "|" "&" 

simpleExpr
first:   identifier numeral "[" "(" "+" "-" "~" "this" "true" "false" 
follow:  ";" "=" "," "]" ".." ")" "->" "|" "&" "#" ">" ">=" "<" "<=" 

relationalOperator
first:   "=" "#" ">" ">=" "<" "<=" 
follow:  identifier numeral "[" "(" "+" "-" "~" "this" "true" "false" 

term
first:   identifier numeral "[" "(" "this" "true" "false" 
follow:  ";" "=" "," "]" ".." ")" "->" "|" "&" "+" "-" "#" ">" ">=" "<" "<=" 

addOperator
first:   "+" "-" 
follow:  identifier numeral "[" "(" "this" "true" "false" 

factor
first:   identifier numeral "[" "(" "this" "true" "false" 
follow:  ";" "=" "," "]" ".." ")" "->" "|" "&" "+" "-" "#" ">" ">=" "<" "<=" 
         "*" "/" "\\" 

multiplyOperator
first:   "*" "/" "\\" 
follow:  identifier numeral "[" "(" "this" "true" "false" 

booleanConstant
first:   "true" "false" 
follow:  ";" "=" "," "]" ".." ")" "->" "|" "&" "+" "-" "#" ">" ">=" "<" "<=" 
         "*" "/" "\\" 

subsAndCompons
first:   "@" "[" 
follow:  ";" "=" "," "]" ".." ")" ":=" "!" "->" "|" "&" "+" "-" "#" ">" ">=" 
         "<" "<=" "*" "/" "\\" 


Cross reference list:
--------------------

  "!"           329
  "#"           457
  "&"           396
  "("           238  347  449
  ")"           246  347  449
  "*"           470
  "+"           420  465
  ","           109  186  208  273  280  297  312  317
  "-"           421  466
  "->"          361  379
  "."            63  483
  ".."          156
  "/"           471
  ":="          314
  ";"            71   75   75  242
  "<"           460
  "<="          461
  "="            93  456
  ">"           458
  ">="          459
  "@"           133  517
  "Boolean"     167
  "["           149  150  156  173  451  515
  "[]"          374
  "\\"          472
  "]"           149  150  156  178  451  515
  "array"       149
  "begin"        67
  "constant"     91
  "do"          356
  "end"          67
  "false"       527
  "fi"          368
  "forall"      361
  "if"          367
  "integer"     166
  "llarof"      363
  "module"       58
  "od"          357
  "private"      60
  "procedure"   127  225
  "range"       156
  "read"        271
  "reference"   251
  "return"      351
  "skip"        266
  "this"        504
  "true"        527
  "tuple"       173
  "typedefinit  122
  "value"       250
  "write"       278
  "|"           387
  "~"           422
  addOperator  -463  425
  andExpressio -391  385  387
  argumentList -344  341
  arrayType    -143  161
  assignStatem -305  303
  block         -65   60  140
  booleanConst -525  448
  callStatemen -321  303
  constantDefi  -84   80
  definition    -77   71
  definitionPa  -69   58   67
  doStatement  -354  261
  emptyStateme -264  255
  expression   -382   93  156  156  286  295  297  315  317  379  449  515
  expressionLi -289  347  451
  factor       -444  437  440
  fieldsAndPro -191  176
  forStatement -359  262
  gcl           -48
  gclString     287
  guardedComma -377  372  374
  guardedComma -370  356  367
  identifier    128  134  329  476  483  493  517
  ifStatement  -365  260
  justProcedur -182  175  219
  module        -55   51   52
  moreFieldsAn -204  202  218
  multiplyOper -468  439
  numeral       447
  parameterDef -248  240  243
  parameterPar -236  230
  procedureDec -222  184  187
  procedureDef -125   82
  qualifiedIde -474  149  150  168  503
  rangeType    -153  161
  readStatemen -268  256
  relationalEx -400  394  396
  relationalOp -454  408
  returnStatem -349  259
  simpleExpr   -412  406  408
  statement    -253   75   75
  statementPar  -73   67  362  380
  subsAndCompo -508  506
  term         -430  420  421  422  426
  tupleType    -170  162
  type         -159  103  122
  typeDefiniti -116   81
  typeSymbol   -164  161  197  213
  validIdentif -491   58   91  103  109  122  197  213  225
  variableAcce -499  271  273  303  312  361  446
  variableAcce -300  258
  variableDefi  -96   79  250  251
  writeItem    -284  278  280
  writeStateme -276  257



59 terminals
117 symbols
378 nodes
11 sets
Symbol Table:
------------

 nr name           typ  hasAt graph  del   line tokenKind
  0 EOF            t    false                 0 fixedToken
  1 identifier     t    false                22 classLitToken
  2 numeral        t    false                23 classToken
  3 gclString      t    false                24 classToken
  4 "module"       t    false                58 litToken
  5 "private"      t    false                60 litToken
  6 "."            t    false                63 fixedToken
  7 "begin"        t    false                67 litToken
  8 "end"          t    false                67 litToken
  9 ";"            t    false                71 fixedToken
 10 "constant"     t    false                91 litToken
 11 "="            t    false                93 fixedToken
 12 ","            t    false               109 fixedToken
 13 "typedefinit   t    false               122 litToken
 14 "procedure"    t    false               127 litToken
 15 "@"            t    false               133 fixedToken
 16 "array"        t    false               149 litToken
 17 "["            t    false               149 fixedToken
 18 "]"            t    false               149 fixedToken
 19 "range"        t    false               156 litToken
 20 ".."           t    false               156 fixedToken
 21 "integer"      t    false               166 litToken
 22 "Boolean"      t    false               167 litToken
 23 "tuple"        t    false               173 litToken
 24 "("            t    false               238 fixedToken
 25 ")"            t    false               246 fixedToken
 26 "value"        t    false               250 litToken
 27 "reference"    t    false               251 litToken
 28 "skip"         t    false               266 litToken
 29 "read"         t    false               271 litToken
 30 "write"        t    false               278 litToken
 31 ":="           t    false               314 fixedToken
 32 "!"            t    false               329 fixedToken
 33 "return"       t    false               351 litToken
 34 "do"           t    false               356 litToken
 35 "od"           t    false               357 litToken
 36 "forall"       t    false               361 litToken
 37 "->"           t    false               361 fixedToken
 38 "llarof"       t    false               363 litToken
 39 "if"           t    false               367 litToken
 40 "fi"           t    false               368 litToken
 41 "[]"           t    false               374 fixedToken
 42 "|"            t    false               387 fixedToken
 43 "&"            t    false               396 fixedToken
 44 "+"            t    false               420 fixedToken
 45 "-"            t    false               421 fixedToken
 46 "~"            t    false               422 fixedToken
 47 "#"            t    false               457 fixedToken
 48 ">"            t    false               458 fixedToken
 49 ">="           t    false               459 fixedToken
 50 "<"            t    false               460 fixedToken
 51 "<="           t    false               461 fixedToken
 52 "*"            t    false               470 fixedToken
 53 "/"            t    false               471 fixedToken
 54 "\\"           t    false               472 fixedToken
 55 "this"         t    false               504 litToken
 56 "true"         t    false               527 litToken
 57 "false"        t    false               527 litToken
 58 ???            t    false                 0 fixedToken
 59 option1        pr   false                28 fixedToken
 60 option3        pr   false                30 fixedToken
 61 option5        pr   false                32 fixedToken
 62 option6        pr   false                33 fixedToken
 63 option7        pr   false                34 fixedToken
 64 option9        pr   false                36 fixedToken
 65 option10       pr   false                37 fixedToken
  0 gcl            nt   false     1 false    48 fixedToken
  1 module         nt   true      9 false    55 fixedToken
  2 validIdentif   nt   false   354 false   491 fixedToken
  3 definitionPa   nt   true     30 true     69 fixedToken
  4 block          nt   true     21 false    65 fixedToken
  5 statementPar   nt   true     31 false    73 fixedToken
  6 definition     nt   true     40 false    77 fixedToken
  7 statement      nt   true    163 false   253 fixedToken
  8 variableDefi   nt   true     52 false    96 fixedToken
  9 constantDefi   nt   true     46 false    84 fixedToken
 10 typeDefiniti   nt   true     60 false   116 fixedToken
 11 procedureDef   nt   true     65 false   125 fixedToken
 12 expression     nt   true    261 false   382 fixedToken
 13 type           nt   true    100 false   159 fixedToken
 14 arrayType      nt   true     73 false   143 fixedToken
 15 qualifiedIde   nt   true    348 false   474 fixedToken
 16 rangeType      nt   true     85 false   153 fixedToken
 17 typeSymbol     nt   true    106 false   164 fixedToken
 18 tupleType      nt   true    111 false   170 fixedToken
 19 justProcedur   nt   true    121 false   182 fixedToken
 20 fieldsAndPro   nt   true    126 false   191 fixedToken
 21 procedureDec   nt   true    142 false   222 fixedToken
 22 moreFieldsAn   nt   true    131 true    204 fixedToken
 23 parameterPar   nt   true    148 false   236 fixedToken
 24 parameterDef   nt   true    159 false   248 fixedToken
 25 emptyStateme   nt   false   177 false   264 fixedToken
 26 readStatemen   nt   true    178 false   268 fixedToken
 27 writeStateme   nt   true    185 false   276 fixedToken
 28 variableAcce   nt   true    204 false   300 fixedToken
 29 returnStatem   nt   false   234 false   349 fixedToken
 30 ifStatement    nt   true    247 false   365 fixedToken
 31 doStatement    nt   true    236 false   354 fixedToken
 32 forStatement   nt   true    240 false   359 fixedToken
 33 variableAcce   nt   true    356 false   499 fixedToken
 34 writeItem      nt   true    195 false   284 fixedToken
 35 expressionLi   nt   true    197 false   289 fixedToken
 36 assignStatem   nt   true    210 false   305 fixedToken
 37 callStatemen   nt   true    223 false   321 fixedToken
 38 argumentList   nt   true    229 false   344 fixedToken
 39 guardedComma   nt   true    252 false   370 fixedToken
 40 guardedComma   nt   true    256 false   377 fixedToken
 41 andExpressio   nt   true    266 false   391 fixedToken
 42 relationalEx   nt   true    271 false   400 fixedToken
 43 simpleExpr     nt   true    282 false   412 fixedToken
 44 relationalOp   nt   false   319 false   454 fixedToken
 45 term           nt   true    292 false   430 fixedToken
 46 addOperator    nt   false   337 false   463 fixedToken
 47 factor         nt   true    300 false   444 fixedToken
 48 multiplyOper   nt   false   343 false   468 fixedToken
 49 booleanConst   nt   false   376 false   525 fixedToken
 50 subsAndCompo   nt   true    363 true    508 fixedToken

Literal Tokens:
--------------


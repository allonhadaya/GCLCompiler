
First & follow symbols:
----------------------

gcl
first:   "module" 
follow:  EOF 

module
first:   "module" 
follow:  EOF "module" 

validIdentifier
first:   identifier 
follow:  identifier "private" "." ";" "constant" "=" "," "]" "typedefinition" 
         "integer" "Boolean" "tuple" 

definitionPart
first:   identifier "constant" "typedefinition" "integer" "Boolean" "tuple" 
follow:  "private" "." "begin" 

block
first:   identifier "begin" "constant" "typedefinition" "integer" "Boolean" 
         "tuple" 
follow:  "." 

statementPart
first:   identifier "skip" "read" "write" "do" "forall" "if" 
follow:  "end" "od" "llarof" "fi" "[]" 

definition
first:   identifier "constant" "typedefinition" "integer" "Boolean" "tuple" 
follow:  ";" 

statement
first:   identifier "skip" "read" "write" "do" "forall" "if" 
follow:  ";" 

variableDefinition
first:   identifier "integer" "Boolean" "tuple" 
follow:  ";" 

constantDefinition
first:   "constant" 
follow:  ";" 

typeDefinition
first:   "typedefinition" 
follow:  ";" 

expression
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," "]" ".." "->" ")" 

type
first:   identifier "integer" "Boolean" "tuple" 
follow:  identifier 

arrayType
first:   "array" 
follow:  identifier 

qualifiedIdentifier
first:   identifier 
follow:  identifier ";" "=" "," "array" "]" "range" ".." ":=" "->" "|" "&" "+" 
         "-" ")" "#" ">" ">=" "<" "<=" "*" "/" "\\" 

rangeType
first:   "range" 
follow:  identifier 

typeSymbol
first:   identifier "integer" "Boolean" 
follow:  identifier "array" "range" 

tupleType
first:   "tuple" 
follow:  identifier 

emptyStatement
first:   "skip" 
follow:  ";" 

readStatement
first:   "read" 
follow:  ";" 

writeStatement
first:   "write" 
follow:  ";" 

assignStatement
first:   identifier 
follow:  ";" 

ifStatement
first:   "if" 
follow:  ";" 

doStatement
first:   "do" 
follow:  ";" 

forStatement
first:   "forall" 
follow:  ";" 

variableAccessEtc
first:   identifier 
follow:  ";" "=" "," "]" ".." ":=" "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" 
         "<=" "*" "/" "\\" 

writeItem
first:   identifier numeral gclString "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," 

guardedCommandList
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  "od" "fi" 

guardedCommand
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  "od" "fi" "[]" 

andExpression
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," "]" ".." "->" "|" ")" 

relationalExpr
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," "]" ".." "->" "|" "&" ")" 

simpleExpr
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "=" "," "]" ".." "->" "|" "&" ")" "#" ">" ">=" "<" "<=" 

relationalOperator
first:   "=" "#" ">" ">=" "<" "<=" 
follow:  identifier numeral "[" "+" "-" "~" "(" "true" "false" 

term
first:   identifier numeral "[" "(" "true" "false" 
follow:  ";" "=" "," "]" ".." "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" "<=" 

addOperator
first:   "+" "-" 
follow:  identifier numeral "[" "(" "true" "false" 

factor
first:   identifier numeral "[" "(" "true" "false" 
follow:  ";" "=" "," "]" ".." "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" "<=" 
         "*" "/" "\\" 

multiplyOperator
first:   "*" "/" "\\" 
follow:  identifier numeral "[" "(" "true" "false" 

booleanConstant
first:   "true" "false" 
follow:  ";" "=" "," "]" ".." "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" "<=" 
         "*" "/" "\\" 


Cross reference list:
--------------------

  "#"           259
  "&"           206
  "("           245
  ")"           245
  "*"           273
  "+"           219  268
  ","            95  134  151  155  167  170  251
  "-"           220  269
  "->"          180  195
  "."            62  284
  ".."          110
  "/"           274
  ":="          168
  ";"            68   72   72
  "<"           262
  "<="          263
  "="            85  258
  ">"           260
  ">="          261
  "Boolean"     126
  "["           104  110  132  249
  "[]"          191
  "\\"          275
  "]"           104  110  137  254
  "array"       104
  "begin"        66
  "constant"     83
  "do"          175
  "end"          66
  "false"       305
  "fi"          187
  "forall"      180
  "if"          186
  "integer"     125
  "llarof"      182
  "module"       58
  "od"          176
  "private"      60
  "range"       110
  "read"        150
  "skip"        146
  "true"        305
  "tuple"       132
  "typedefinit  116
  "write"       155
  "|"           201
  "~"           222
  addOperator  -266  225
  andExpressio -203  201  201
  arrayType    -101  121
  assignStatem -163  143
  block         -64   61
  booleanConst -303  242
  constantDefi  -80   77
  definition    -74   68
  definitionPa  -68   59   66
  doStatement  -173  143
  emptyStateme -146  142
  expression   -198   85  110  110  160  169  170  195  245  249  251
  factor       -236  232  232
  forStatement -178  144
  gcl           -48
  gclString     161
  guardedComma -193  191  191
  guardedComma -189  175  186
  identifier    134  279  284  293
  ifStatement  -184  143
  module        -55   51   52
  multiplyOper -271  232
  numeral       239
  qualifiedIde -277  104  127  301
  rangeType    -107  121
  readStatemen -148  142
  relationalEx -208  206  206
  relationalOp -256  212
  simpleExpr   -216  211  212
  statement    -140   72   72
  statementPar  -70   66  181  196
  term         -229  219  220  222  225
  tupleType    -129  121
  type         -119   91  116
  typeDefiniti -113   78
  typeSymbol   -123  121  132  134
  validIdentif -291   58   83   91   95  116  132
  variableAcce -298  150  151  166  167  180  238
  variableDefi  -88   76
  writeItem    -158  155  155
  writeStateme -153  142



52 terminals
97 symbols
281 nodes
11 sets
Symbol Table:
------------

 nr name           typ  hasAt graph  del   line tokenKind
  0 EOF            t    false                 0 fixedToken
  1 identifier     t    false                22 classLitToken
  2 numeral        t    false                23 classToken
  3 gclString      t    false                24 classToken
  4 "module"       t    false                58 litToken
  5 "private"      t    false                60 litToken
  6 "."            t    false                62 fixedToken
  7 "begin"        t    false                66 litToken
  8 "end"          t    false                66 litToken
  9 ";"            t    false                68 fixedToken
 10 "constant"     t    false                83 litToken
 11 "="            t    false                85 fixedToken
 12 ","            t    false                95 fixedToken
 13 "array"        t    false               104 litToken
 14 "["            t    false               104 fixedToken
 15 "]"            t    false               104 fixedToken
 16 "range"        t    false               110 litToken
 17 ".."           t    false               110 fixedToken
 18 "typedefinit   t    false               116 litToken
 19 "integer"      t    false               125 litToken
 20 "Boolean"      t    false               126 litToken
 21 "tuple"        t    false               132 litToken
 22 "skip"         t    false               146 litToken
 23 "read"         t    false               150 litToken
 24 "write"        t    false               155 litToken
 25 ":="           t    false               168 fixedToken
 26 "do"           t    false               175 litToken
 27 "od"           t    false               176 litToken
 28 "forall"       t    false               180 litToken
 29 "->"           t    false               180 fixedToken
 30 "llarof"       t    false               182 litToken
 31 "if"           t    false               186 litToken
 32 "fi"           t    false               187 litToken
 33 "[]"           t    false               191 fixedToken
 34 "|"            t    false               201 fixedToken
 35 "&"            t    false               206 fixedToken
 36 "+"            t    false               219 fixedToken
 37 "-"            t    false               220 fixedToken
 38 "~"            t    false               222 fixedToken
 39 "("            t    false               245 fixedToken
 40 ")"            t    false               245 fixedToken
 41 "#"            t    false               259 fixedToken
 42 ">"            t    false               260 fixedToken
 43 ">="           t    false               261 fixedToken
 44 "<"            t    false               262 fixedToken
 45 "<="           t    false               263 fixedToken
 46 "*"            t    false               273 fixedToken
 47 "/"            t    false               274 fixedToken
 48 "\\"           t    false               275 fixedToken
 49 "true"         t    false               305 litToken
 50 "false"        t    false               305 litToken
 51 ???            t    false                 0 fixedToken
 52 option1        pr   false                28 fixedToken
 53 option3        pr   false                30 fixedToken
 54 option5        pr   false                32 fixedToken
 55 option6        pr   false                33 fixedToken
 56 option7        pr   false                34 fixedToken
 57 option9        pr   false                36 fixedToken
 58 option10       pr   false                37 fixedToken
  0 gcl            nt   false     1 false    48 fixedToken
  1 module         nt   true      9 false    55 fixedToken
  2 validIdentif   nt   false   273 false   291 fixedToken
  3 definitionPa   nt   true     26 true     68 fixedToken
  4 block          nt   true     18 false    64 fixedToken
  5 statementPar   nt   true     27 false    70 fixedToken
  6 definition     nt   true     36 false    74 fixedToken
  7 statement      nt   true    104 false   140 fixedToken
  8 variableDefi   nt   true     46 false    88 fixedToken
  9 constantDefi   nt   true     40 false    80 fixedToken
 10 typeDefiniti   nt   true     67 false   113 fixedToken
 11 expression     nt   true    175 false   198 fixedToken
 12 type           nt   true     78 false   119 fixedToken
 13 arrayType      nt   true     53 false   101 fixedToken
 14 qualifiedIde   nt   true    267 false   277 fixedToken
 15 rangeType      nt   true     59 false   107 fixedToken
 16 typeSymbol     nt   true     84 false   123 fixedToken
 17 tupleType      nt   true     89 false   129 fixedToken
 18 emptyStateme   nt   false   116 false   146 fixedToken
 19 readStatemen   nt   true    117 false   148 fixedToken
 20 writeStateme   nt   true    124 false   153 fixedToken
 21 assignStatem   nt   true    136 false   163 fixedToken
 22 ifStatement    nt   true    161 false   184 fixedToken
 23 doStatement    nt   true    150 false   173 fixedToken
 24 forStatement   nt   true    154 false   178 fixedToken
 25 variableAcce   nt   true    275 false   298 fixedToken
 26 writeItem      nt   true    134 false   158 fixedToken
 27 guardedComma   nt   true    166 false   189 fixedToken
 28 guardedComma   nt   true    170 false   193 fixedToken
 29 andExpressio   nt   true    180 false   203 fixedToken
 30 relationalEx   nt   true    185 false   208 fixedToken
 31 simpleExpr     nt   true    196 false   216 fixedToken
 32 relationalOp   nt   false   238 false   256 fixedToken
 33 term           nt   true    206 false   229 fixedToken
 34 addOperator    nt   false   256 false   266 fixedToken
 35 factor         nt   true    214 false   236 fixedToken
 36 multiplyOper   nt   false   262 false   271 fixedToken
 37 booleanConst   nt   false   279 false   303 fixedToken

Literal Tokens:
--------------



First & follow symbols:
----------------------

gcl
first:   "module" 
follow:  EOF 

module
first:   "module" 
follow:  EOF "module" 

validIdentifier
first:   identifier 
follow:  identifier "private" "." ";" "constant" "=" "," "typedefinition" 
         "procedure" "]" "integer" "Boolean" "tuple" 

definitionPart
first:   identifier "constant" "typedefinition" "procedure" "integer" 
         "Boolean" "tuple" 
follow:  "private" "." "begin" 

block
first:   identifier "begin" "constant" "typedefinition" "procedure" "integer" 
         "Boolean" "tuple" 
follow:  "." ";" 

statementPart
first:   identifier "skip" "read" "write" "do" "forall" "if" 
follow:  "end" "od" "llarof" "fi" "[]" 

definition
first:   identifier "constant" "typedefinition" "procedure" "integer" 
         "Boolean" "tuple" 
follow:  ";" 

statement
first:   identifier "skip" "read" "write" "do" "forall" "if" 
follow:  ";" 

variableDefinition
first:   identifier "integer" "Boolean" "tuple" 
follow:  ";" 

constantDefinition
first:   "constant" 
follow:  ";" 

typeDefinition
first:   "typedefinition" 
follow:  ";" 

procedureDefinition
first:   "procedure" 
follow:  ";" 

expression
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," "]" ".." "->" ")" 

type
first:   identifier "integer" "Boolean" "tuple" 
follow:  identifier 

qualifiedIdentifier
first:   identifier 
follow:  identifier "begin" ";" "constant" "=" "," "typedefinition" 
         "procedure" "array" "[" "]" "range" ".." "integer" "Boolean" "tuple" 
         ":=" "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" "<=" "*" "/" "\\" "@" 

arrayType
first:   "array" 
follow:  identifier 

rangeType
first:   "range" 
follow:  identifier 

typeSymbol
first:   identifier "integer" "Boolean" 
follow:  identifier "array" "range" 

tupleType
first:   "tuple" 
follow:  identifier 

emptyStatement
first:   "skip" 
follow:  ";" 

readStatement
first:   "read" 
follow:  ";" 

writeStatement
first:   "write" 
follow:  ";" 

assignStatement
first:   identifier 
follow:  ";" 

ifStatement
first:   "if" 
follow:  ";" 

doStatement
first:   "do" 
follow:  ";" 

forStatement
first:   "forall" 
follow:  ";" 

variableAccessEtc
first:   identifier 
follow:  ";" "=" "," "]" ".." ":=" "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" 
         "<=" "*" "/" "\\" 

writeItem
first:   identifier numeral gclString "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," 

guardedCommandList
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  "od" "fi" 

guardedCommand
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  "od" "fi" "[]" 

andExpression
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," "]" ".." "->" "|" ")" 

relationalExpr
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "," "]" ".." "->" "|" "&" ")" 

simpleExpr
first:   identifier numeral "[" "+" "-" "~" "(" "true" "false" 
follow:  ";" "=" "," "]" ".." "->" "|" "&" ")" "#" ">" ">=" "<" "<=" 

relationalOperator
first:   "=" "#" ">" ">=" "<" "<=" 
follow:  identifier numeral "[" "+" "-" "~" "(" "true" "false" 

term
first:   identifier numeral "[" "(" "true" "false" 
follow:  ";" "=" "," "]" ".." "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" "<=" 

addOperator
first:   "+" "-" 
follow:  identifier numeral "[" "(" "true" "false" 

factor
first:   identifier numeral "[" "(" "true" "false" 
follow:  ";" "=" "," "]" ".." "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" "<=" 
         "*" "/" "\\" 

multiplyOperator
first:   "*" "/" "\\" 
follow:  identifier numeral "[" "(" "true" "false" 

booleanConstant
first:   "true" "false" 
follow:  ";" "=" "," "]" ".." "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" "<=" 
         "*" "/" "\\" 

subsAndCompons
first:   "[" "@" 
follow:  ";" "=" "," "]" ".." ":=" "->" "|" "&" "+" "-" ")" "#" ">" ">=" "<" 
         "<=" "*" "/" "\\" 


Cross reference list:
--------------------

  "#"           345
  "&"           275
  "("           328
  ")"           328
  "*"           358
  "+"           298  353
  ","           108  171  199  206  224  229  336
  "-"           299  354
  "->"          240  258
  "."            62  371
  ".."          142
  "/"           359
  ":="          226
  ";"            70   74   74
  "<"           348
  "<="          349
  "="            92  344
  ">"           346
  ">="          347
  "@"           402
  "Boolean"     153
  "["           135  136  142  164  333  400
  "[]"          253
  "\\"          360
  "]"           135  136  142  177  339  400
  "array"       135
  "begin"        66
  "constant"     90
  "do"          235
  "end"          66
  "false"       412
  "fi"          247
  "forall"      240
  "if"          246
  "integer"     152
  "llarof"      242
  "module"       58
  "od"          236
  "private"      60
  "procedure"   127
  "range"       142
  "read"        197
  "skip"        192
  "true"        412
  "tuple"       164
  "typedefinit  121
  "write"       204
  "|"           266
  "~"           301
  addOperator  -351  304
  andExpressio -270  264  266
  arrayType    -129  147
  assignStatem -216  185
  block         -64   60  127
  booleanConst -410  327
  constantDefi  -83   79
  definition    -76   70
  definitionPa  -68   58   66
  doStatement  -233  187
  emptyStateme -190  182
  expression   -261   92  142  142  212  227  229  258  328  333  336  400
  factor       -323  316  319
  forStatement -238  188
  gcl           -48
  gclString     214
  guardedComma -256  251  253
  guardedComma -249  235  246
  identifier    364  371  381  402
  ifStatement  -244  186
  module        -55   51   52
  multiplyOper -356  318
  numeral       326
  procedureDef -124   81
  qualifiedIde -362  127  135  136  154  390
  rangeType    -139  147
  readStatemen -194  183
  relationalEx -279  273  275
  relationalOp -342  287
  simpleExpr   -291  285  287
  statement    -180   74   74
  statementPar  -72   66  241  259
  subsAndCompo -393  391
  term         -309  298  299  301  305
  tupleType    -156  148
  type         -145  102  121
  typeDefiniti -115   80
  typeSymbol   -150  147  165  171
  validIdentif -379   58   90  102  108  121  165  171
  variableAcce -387  197  199  222  224  240  325
  variableDefi  -95   78
  writeItem    -210  204  206
  writeStateme -202  184



54 terminals
101 symbols
305 nodes
11 sets
Symbol Table:
------------

 nr name           typ  hasAt graph  del   line tokenKind
  0 EOF            t    false                 0 fixedToken
  1 identifier     t    false                22 classLitToken
  2 numeral        t    false                23 classToken
  3 gclString      t    false                24 classToken
  4 "module"       t    false                58 litToken
  5 "private"      t    false                60 litToken
  6 "."            t    false                62 fixedToken
  7 "begin"        t    false                66 litToken
  8 "end"          t    false                66 litToken
  9 ";"            t    false                70 fixedToken
 10 "constant"     t    false                90 litToken
 11 "="            t    false                92 fixedToken
 12 ","            t    false               108 fixedToken
 13 "typedefinit   t    false               121 litToken
 14 "procedure"    t    false               127 litToken
 15 "array"        t    false               135 litToken
 16 "["            t    false               135 fixedToken
 17 "]"            t    false               135 fixedToken
 18 "range"        t    false               142 litToken
 19 ".."           t    false               142 fixedToken
 20 "integer"      t    false               152 litToken
 21 "Boolean"      t    false               153 litToken
 22 "tuple"        t    false               164 litToken
 23 "skip"         t    false               192 litToken
 24 "read"         t    false               197 litToken
 25 "write"        t    false               204 litToken
 26 ":="           t    false               226 fixedToken
 27 "do"           t    false               235 litToken
 28 "od"           t    false               236 litToken
 29 "forall"       t    false               240 litToken
 30 "->"           t    false               240 fixedToken
 31 "llarof"       t    false               242 litToken
 32 "if"           t    false               246 litToken
 33 "fi"           t    false               247 litToken
 34 "[]"           t    false               253 fixedToken
 35 "|"            t    false               266 fixedToken
 36 "&"            t    false               275 fixedToken
 37 "+"            t    false               298 fixedToken
 38 "-"            t    false               299 fixedToken
 39 "~"            t    false               301 fixedToken
 40 "("            t    false               328 fixedToken
 41 ")"            t    false               328 fixedToken
 42 "#"            t    false               345 fixedToken
 43 ">"            t    false               346 fixedToken
 44 ">="           t    false               347 fixedToken
 45 "<"            t    false               348 fixedToken
 46 "<="           t    false               349 fixedToken
 47 "*"            t    false               358 fixedToken
 48 "/"            t    false               359 fixedToken
 49 "\\"           t    false               360 fixedToken
 50 "@"            t    false               402 fixedToken
 51 "true"         t    false               412 litToken
 52 "false"        t    false               412 litToken
 53 ???            t    false                 0 fixedToken
 54 option1        pr   false                28 fixedToken
 55 option3        pr   false                30 fixedToken
 56 option5        pr   false                32 fixedToken
 57 option6        pr   false                33 fixedToken
 58 option7        pr   false                34 fixedToken
 59 option9        pr   false                36 fixedToken
 60 option10       pr   false                37 fixedToken
  0 gcl            nt   false     1 false    48 fixedToken
  1 module         nt   true      9 false    55 fixedToken
  2 validIdentif   nt   false   285 false   379 fixedToken
  3 definitionPa   nt   true     27 true     68 fixedToken
  4 block          nt   true     19 false    64 fixedToken
  5 statementPar   nt   true     28 false    72 fixedToken
  6 definition     nt   true     37 false    76 fixedToken
  7 statement      nt   true    116 false   180 fixedToken
  8 variableDefi   nt   true     49 false    95 fixedToken
  9 constantDefi   nt   true     43 false    83 fixedToken
 10 typeDefiniti   nt   true     56 false   115 fixedToken
 11 procedureDef   nt   true     60 false   124 fixedToken
 12 expression     nt   true    187 false   261 fixedToken
 13 type           nt   true     90 false   145 fixedToken
 14 qualifiedIde   nt   true    279 false   362 fixedToken
 15 arrayType      nt   true     64 false   129 fixedToken
 16 rangeType      nt   true     75 false   139 fixedToken
 17 typeSymbol     nt   true     96 false   150 fixedToken
 18 tupleType      nt   true    101 false   156 fixedToken
 19 emptyStateme   nt   false   128 false   190 fixedToken
 20 readStatemen   nt   true    129 false   194 fixedToken
 21 writeStateme   nt   true    136 false   202 fixedToken
 22 assignStatem   nt   true    148 false   216 fixedToken
 23 ifStatement    nt   true    173 false   244 fixedToken
 24 doStatement    nt   true    162 false   233 fixedToken
 25 forStatement   nt   true    166 false   238 fixedToken
 26 variableAcce   nt   true    287 false   387 fixedToken
 27 writeItem      nt   true    146 false   210 fixedToken
 28 guardedComma   nt   true    178 false   249 fixedToken
 29 guardedComma   nt   true    182 false   256 fixedToken
 30 andExpressio   nt   true    192 false   270 fixedToken
 31 relationalEx   nt   true    197 false   279 fixedToken
 32 simpleExpr     nt   true    208 false   291 fixedToken
 33 relationalOp   nt   false   250 false   342 fixedToken
 34 term           nt   true    218 false   309 fixedToken
 35 addOperator    nt   false   268 false   351 fixedToken
 36 factor         nt   true    226 false   323 fixedToken
 37 multiplyOper   nt   false   274 false   356 fixedToken
 38 booleanConst   nt   false   303 false   410 fixedToken
 39 subsAndCompo   nt   true    290 true    393 fixedToken

Literal Tokens:
--------------

